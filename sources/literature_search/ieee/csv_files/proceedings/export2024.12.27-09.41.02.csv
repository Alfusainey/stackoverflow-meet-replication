"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"Kriging-based Trust Nodes Aided REM Construction under Threatening Environment","Y. Gao; T. Fujii","Advanced Wireless and Communication research Center, The University of Electro-Communications, Tokyo, Japan; Advanced Wireless and Communication research Center, The University of Electro-Communications, Tokyo, Japan",2022 IEEE 96th Vehicular Technology Conference (VTC2022-Fall),"18 Jan 2023","2022","","","1","7","Radio Environment Map (REM) is used to enhance the communication efficiency in spatial spectrum sharing. REM indicates the received signal strength at each location by measurements data from each terminal or estimated data by the database. Crowdsourcing-based spectrum sensing is a promising approach for generating the REM for a large communication area. However, the open environment also leads the security problems, which can damage the REM accuracy by some malicious activities. The accuracy of terminals’ reports became an essential problem need to be considered in REM construction system. In this paper, we introduce a Kriging-based Trust Nodes aided REM construction (KTNA-REM) system to achieve a high accuracy under the threatening environment. By adding the support of a small amount of the trust nodes, the database can evaluate the reputation of the terminals continuously and generate the REM based on the high reliable data even when the amount of the malicious terminals is big. Simulation results confirm the efficiency and accuracy of the proposed method.","2577-2465","978-1-6654-5468-1","10.1109/VTC2022-Fall57202.2022.10012983","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10012983","Radio environment map;terminal selection;ssdf;spectrum security;Kriging interpolation","Vehicular and wireless technologies;Interpolation;Databases;Simulation;Real-time systems;Sensors;Reliability","","","","16","IEEE","18 Jan 2023","","","IEEE","IEEE Conferences"
"A Context-based Crowd Sourcing Tool for Quality Assurance of SNOMED CT","K. Qazi; A. Agrawal","Department of Computer Science, Manhattan College, New York City, USA; Department of Computer Science, Manhattan College, New York City, USA",2021 IEEE International Conference on Bioinformatics and Biomedicine (BIBM),"14 Jan 2022","2021","","","2848","2854","SNOMED CT is a prominent clinical terminology that is globally used by healthcare professionals to record patient data. As such, it is important that SNOMED CT be free from errors and inconsistencies so that they do not trickle down to applications that rely on it. Studies have shown that, owing to its large and complex nature as well as its regular revisions, errors and inconsistencies are inherent in SNOMED CT. However, auditing resources are limited, and manual auditing is cumbersome. This calls for computational quality assurance techniques to identify areas that have a high likelihood of modeling discrepancies. This study presents a visualization tool that is based on a context-based auditing methodology and can be used as a crowdsourcing application to allow SNOMED CT users from across the globe to comment on the modeling of a concept that is found by the underlying algorithm to be inconsistent. A manual auditing of a sample of 50 concept pairs using the visualization tool found 66% of the pairs to exhibit inconsistencies. Tools such as this and the feedback obtained from SNOMED CT users through collective collaboration can be used by the curators of SNOMED CT to further enhance the terminology.","","978-1-6654-0126-5","10.1109/BIBM52615.2021.9669688","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9669688","Auditing;Context-based;Crowd Sourcing;Lexical Analysis;Quality Assurance;SNOMED CT;Visualization Tool","Crowdsourcing;Quality assurance;Terminology;Computational modeling;Conferences;Collaboration;Manuals","","","","25","IEEE","14 Jan 2022","","","IEEE","IEEE Conferences"
"On my way: Optimizing driving routes for navigation applications","Fengpeng Yuan; Xueyuan Song; J. Lindqvist",Rutgers University; Rutgers University; Rutgers University,2016 13th IEEE Annual Consumer Communications & Networking Conference (CCNC),"31 Mar 2016","2016","","","27","31","Conventionally, the route recommendations given by GPS navigation applications have been considered as the optimal route search problem only between two locations - origin and destination [1]. Sometimes people want to visit several intermediate locations prior to reaching their final destination. For example, travelers may want to visit a diner and a gas station before arriving at their vacation destination. Although there is likely to be many choices that are available along the route to the destination, only one place from each type should be chosen. Furthermore, in new emerging application domains, such as “physical-world crowdsourcing” [2], people may want to opportunistically visit some places in order to complete personal or work related tasks. Our work explores a design space where we try to reduce the amount of requests made to third-party map and route data providers. We explore the simple idea of using the Euclidean distance as a rough estimate for the optimal route between destinations with multiple waypoints. Our preliminary results indicate that with over 80% of test cases, this simple Euclidean distance estimator approach gives at least one optimal routing alternative.","2331-9860","978-1-4673-9292-1","10.1109/CCNC.2016.7444726","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7444726","","Euclidean distance;Google;Space exploration;Global Positioning System;Roads;Conferences","","","","20","IEEE","31 Mar 2016","","","IEEE","IEEE Conferences"
"Estimation Of Impression Associated With Portraits Using Facial Landmarks And Visual Features","M. Miyata; K. Aizawa","Department of Information and Communication Engineering, The University of Tokyo, 7-3-1 Hongo, Bunkyo-ku, Tokyo, Japan; Department of Information and Communication Engineering, The University of Tokyo, 7-3-1 Hongo, Bunkyo-ku, Tokyo, Japan",2020 IEEE International Conference on Image Processing (ICIP),"30 Sep 2020","2020","","","1421","1425","Portrait manipulation techniques are important for expressing oneself in social networking or portrait/video posting services. Even though several applications (e.g., smartphone apps) have been developed to facilitate portrait manipulation, it is still difficult to obtain ideal results owing to the large number of user-controllable parameters. To tackle this problem, we propose a novel application that can manipulate portraits using impression words. In this study, we select new portraits and impression words, and we devise new experimental settings to enrich the dataset. Moreover, using human evaluations collected by crowdsourcing, we develop and analyze a novel ranking network that uses portraits and facial landmarks as input for impression estimation of the manipulated images.","2381-8549","978-1-7281-6395-6","10.1109/ICIP40778.2020.9191140","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9191140","Impression estimation;Portrait manipulation;Relative attribute;Face;Impression word","Crowdsourcing;Visualization;Social networking (online);Image processing;Estimation;Facial features;Strain","","","","17","IEEE","30 Sep 2020","","","IEEE","IEEE Conferences"
"Spatial and Temporal Patterns Recognition of Snake Occurrences through Visualisation Techniques: A Case Study using the iNaturalist Data","C. A. Madhura Ranade; A. Joshi; N. Patvardhan","Symbiosis Institute of International Business, Pune Symbiosis International (Deemed University), Pune, India; Department of Management, Sciences S. P. Pune University, Pune, India; Symbiosis Institute of International Business, Pune Symbiosis International (Deemed University), Pune, India",2023 Second International Conference on Augmented Intelligence and Sustainable Systems (ICAISS),"22 Sep 2023","2023","","","786","793","Conservation of biodiversity plays a vital role in balancing the environment. Reptiles are one of the most crucial parts of the wildlife environment. In recent years, people’s awareness has increased for wildlife conservation. Government, Agencies and Researchers are taking initiatives for the preservation of wildlife. In India also, many efforts are made to protect wildlife and biodiversity. Technology will play a significant role in wildlife management. Many people are reporting wildlife data on platforms like iNaturalist. It is a crowdsourcing platform for reporting wildlife sightings. Computer tools and technologies can be used to recognise and monitor species. This research aims to review the distribution and diversity of snakes in various states in India. The researcher has tried to establish a relationship between reporting of snakes and other environmental factors like temperature and humidity for any specific month in India. A large dataset of more than 12000 observations reported by enthusiasts, researchers and ordinary people on the iNaturalist platform is processed using Python Programming.","","979-8-3503-2579-9","10.1109/ICAISS58487.2023.10250660","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10250660","Wildlife Conservation;Distribution of snakes;iNaturalist;Visualisation (Viz);Real-Time Crowdsourcing (RTC);Pattern Recognition;Venomous snakes;Roadkill","Crowdsourcing;Temperature sensors;Temperature measurement;Temperature distribution;Precipitation;Wildlife;Data visualization","","","","17","IEEE","22 Sep 2023","","","IEEE","IEEE Conferences"
"A Multivocal Literature Review on Prototype Pollution Vulnerability","I. A. Hakim; Widyawan; I. W. Mustika; E. Prasetyo","Dept. of Electrical Engineering and Information Technology, Universitas Gadjah Mada, Yogyakarta, Indonesia; Dept. of Electrical Engineering and Information Technology, Universitas Gadjah Mada, Yogyakarta, Indonesia; Dept. of Electrical Engineering and Information Technology, Universitas Gadjah Mada, Yogyakarta, Indonesia; Dept. of Information Technology, Universitas Muhammadiyah, Yogyakarta, Bantul, Indonesia",2023 International Conference on Information Technology and Computing (ICITCOM),"28 Feb 2024","2023","","","375","379","JavaScript is one of the most widely used languages in modern web development. The unique way JavaScript inherits properties and methods between objects leads to a unique vulnerability called prototype pollution. In this paper, we study the problem in a holistic way using a multivocal literature review (MLR). It includes reviews of grey literature (GL) reviews in addition to formal literature to summarize the state of the art and current practice on this topic. We found that the impact of this vulnerability varies due to different implementations of JavaScript, e.g., denial of service (DoS), property injection, session fixation, remote code execution (RCE), privilege escalation, SQL injection, and cross-site scripting (XSS). We also found several methods to detect and mitigate prototype pollution. These include static analysis, dynamic analysis, and hybrid analysis for prototype pollution detection and analysis. Many concerned companies are also successfully mitigating the supply-chain risk of prototype pollution through security crowdsourcing, such as running a bug bounty program, managing an advisories database, and private reporting.","","979-8-3503-5963-3","10.1109/ICITCOM60176.2023.10442205","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10442205","javascript;multivocal literature review;prototype pollution;vulnerability;web security","Pollution;Reviews;Cross-site scripting;Bibliographies;Computer bugs;Prototypes;Security","","","","26","IEEE","28 Feb 2024","","","IEEE","IEEE Conferences"
"AI-Powered Flood Mapathon","K. Chen; X. Lu; T. Sheng; X. Liu; J. Chen; Z. Wang; X. Sun; R. Hänsch","Aerospace Information Research Institute, Chinese Academy of Sciences, China; Aerospace Information Research Institute, Chinese Academy of Sciences, China; Aerospace Information Research Institute, Chinese Academy of Sciences, China; Aerospace Information Research Institute, Chinese Academy of Sciences, China; Aerospace Information Research Institute, Chinese Academy of Sciences, China; Aerospace Information Research Institute, Chinese Academy of Sciences, China; Aerospace Information Research Institute, Chinese Academy of Sciences, China; German Aerospace Center, Germany",IGARSS 2024 - 2024 IEEE International Geoscience and Remote Sensing Symposium,"5 Sep 2024","2024","","","3841","3844","Floods represent a pervasive natural hazard with global ramifications, impacting a vast population and resulting in substantial property damage and severe mortality. Particularly worrisome is their disproportionate effect on the least developed countries, which exacerbates developmental imbalances, posing a significant obstacle to the attainment of the United Nations Sustainable Development Goals (UN SDGs). This paper introduces the AI-powered Flood Mapathon activity, co-organized by the Aerospace Information Research Institute under the Chinese Academy of Sciences, in partnership with GEOVIS Technology Co., Ltd., GEOVIS Earth Technology Co., Ltd., and IEEE GRSS IADF. The activity seeks to mobilize individuals worldwide to address the most prevalent natural hazard-floods by collaboratively mapping inundated regions through the analysis of satellite imagery. Gaining widespread attention, the activity has garnered 30,755 submissions from 310 participants across 34 countries. Through collective efforts, participants have curated a semantic segmentation dataset focusing on floods, incorporating annotations of pertinent features related to both floods and human activities. Additionally, the paper elucidates the custom crowdsourcing mapping system, which seamlessly integrates cutting-edge AI technologies to alleviate mapping complexities. The activity contributes to sustainability by drawing extensive public attention, creating a public flood dataset for academic research, and establishing an efficient and intelligent mapping system.","2153-7003","979-8-3503-6032-5","10.1109/IGARSS53475.2024.10641743","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10641743","Mapathon;flood;crowdsourcing;Artificial Intelligence;mapping","Crowdsourcing;Image resolution;Semantic segmentation;Roads;Geoscience and remote sensing;Market research;Satellite images","","","","11","IEEE","5 Sep 2024","","","IEEE","IEEE Conferences"
"Tapping into social media and digital humanitarians for building disaster resilience in Canada","K. Kaminska","Defence Research and Development Canada, Centre for Security Science, Ottawa, Canada",2015 IEEE Canada International Humanitarian Technology Conference (IHTC2015),"24 Sep 2015","2015","","","1","4","Social media offers the opportunity to connect with the public, improve situational awareness, and to reach people quickly with alerts, warnings and preparedness messages. However, the ever increasing popularity of social networking can also lead to `information overload' which can prevent disaster management organizations from processing and using social media information effectively. This limitation can be overcome through collaboration with `digital humanitarians' - tech savvy volunteers, who are leading the way in crisis-mapping and crowdsourcing of disaster information. Since the 2010 earthquake in Haiti, their involvement has become an integral part of the international community's response to major disasters. For example, the United Nations Office for the Coordination of Humanitarian Affairs (UNOCHA) activated the Digital Humanitarian Network during the 2013 response to typhoon Haiyan/Yolanda [1]. Our previous research has shown that Canada's disaster management community has not yet fully taken advantage of all the opportunities that social media offers, including the potential of collaboration with digital humanitarians [2]. This finding has led to the development of an experiment designed to test how social media aided collaboration can enable enhanced situational awareness and improve recovery outcomes. The experiment took place in November 2014 as a part of the third Canada-US Enhanced Resiliency Experiment (CAUSE III), which is an experiment series that focuses on enhancing resilience through situational awareness interoperability. This paper describes the results of the experiment and Canadian efforts to facilitate effective information exchange between disaster management officials, digital humanitarians as well as the public at large, so as to improve situational awareness and build resilience, both at the community and the national level.","","978-1-4799-8963-8","10.1109/IHTC.2015.7274444","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7274444","social media;resilience;disaster management;social network analysis","Media;Organizations;Disaster management;Twitter;Safety;Collaboration","","","","11","IEEE","24 Sep 2015","","","IEEE","IEEE Conferences"
"On Urban Data Analytics and Applications in the Big Data Era","D. Tomaras","Department of Informatics, Athens University of Economics and Business, Athens, Greece",2024 25th IEEE International Conference on Mobile Data Management (MDM),"17 Jul 2024","2024","","","328","330","The proliferation of smart technologies has provided significant advances in the way people receive information and interact in smart cities. For instance, smart traffic monitoring systems allow citizens and city operators to receive in real-time alerts about traffic conditions. At the same time, alternative means of transport, such as bike sharing systems, have enjoyed tremendous success in many major cities around the world today and can provide real-time information regarding the mobility of the users. It is quite clear that smart cities systems generate vast amounts of data during their daily operation. Researchers typically focus on analyzing such urban data in order to identify mobility patterns or infer user preferences to provide services to the crowd, such as traffic warning applications. In this thesis, we aimed at analyzing the vast amounts of urban data generated in these systems, that are large in volume, and typically heterogeneous, to identify key insights in their operation and develop a suite of crowdsourcing techniques to improve the working of smart city applications and ultimately enhance the sustainability of smart cities.","2375-0324","979-8-3503-7455-1","10.1109/MDM61037.2024.00067","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10591634","urban data analytics;mobile systems;mobile applications;big data","Measurement;Crowdsourcing;Data analysis;Smart cities;Shared transport;Big Data;Real-time systems","","","","17","IEEE","17 Jul 2024","","","IEEE","IEEE Conferences"
"Mean field equilibria of dynamic auctions with learning: A dynamic revenue equivalence theorem","K. Iyer; R. Johari; M. Sundararajan","Management Science and Engineering, Stanford University, USA; Management Science and Engineering, Stanford University, USA; Google Inc., Mountain View, CA, USA","2011 49th Annual Allerton Conference on Communication, Control, and Computing (Allerton)","2 Jan 2012","2011","","","1002","1003","Auctions are observed as a market mechanism in a wide range of economic transactions involving repeated interactions among the market participants: sponsored search markets run by Google and Yahoo!, online marketplaces such as eBay and Amazon, crowdsourcing, etc. In many of these markets, the participants typically have incomplete information; for example, the participants may not know the quality of the good being auctioned or their value for the good. In such settings, repeated interactions among the participants give rise to extremely complex bidder behavior due to the presence of learning among the participants. To study learning, we consider a dynamic setting where identical copies of a good are sold through a sequence of second price auctions over time. Each agent in the market has an independent private valuation which determines the distribution of the reward she obtains from the good. However, the agents are unaware of their own private valuations. Every time an agent wins an auction and obtains a copy of the good, her realized reward from the good informs her about her valuation. Thus, each agent faces a trade-off between exploration (by bidding higher) and exploitation (by bidding close to her expected rewards).","","978-1-4577-1818-2","10.1109/Allerton.2011.6120276","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6120276","","Cost accounting;Approximation methods;Electronic mail;USA Councils;Google;Educational institutions;Research and development management","","","","2","IEEE","2 Jan 2012","","","IEEE","IEEE Conferences"
"Crowd Science for Hybrid AI Applications","E. Taran; V. Malanina; F. Casati","TPU, Tomsk, Russia; TPU, Tomsk, Russia; University of Trento, Trento, Italy",2021 IEEE International Conference on Service-Oriented System Engineering (SOSE),"15 Oct 2021","2021","","","172","175","Most AI applications are hybrid, that is, employ machines to make inferences but can fall back on humans when the algorithm is not confident enough. This is true for a wide class of applications ranging from self-driving cars to decision making and process automation in enterprise AI. In this WIP paper we present our vision and progress towards an AI and crowd service that trains, assess and refines ML systems intended to be used in hybrid context. We specifically focus on crowdsourcing as a mean to assist ML algorithm development, and on the different ways in which crowd and machine can interact before, during and after the training process in a synergic way that goes well beyond the “traditional” application of crowd workers to provide data labels for ML training.","2642-6587","978-1-6654-3477-5","10.1109/SOSE52839.2021.00027","Russian Science Foundation(grant numbers:19-18-00282); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9564326","Crodwsourcing;Machine Learning;hybrid learning","Training;Crowdsourcing;Automation;Service-oriented systems engineering;Conferences;Decision making;Inference algorithms","","","","10","IEEE","15 Oct 2021","","","IEEE","IEEE Conferences"
"ICHOS - Noise Data Collection through Crowd Sourcing techniques using Mobile Phones","K. Prasad; A. M. Prahastiwi; S. -M. Wang","Department of Interaction Design, NTUT, Taipei, Taiwan; Department of Interaction Design, NTUT, Taipei, Taiwan; Department of Interaction Design, NTUT, Taipei, Taiwan",2022 IEEE 11th Global Conference on Consumer Electronics (GCCE),"18 Jan 2023","2022","","","447","449","Urban environments are full of sounds, and noise pollution issues are rising with the world’s ever-growing cities. This paper discusses an application model aiming to collect noise data using crowdsourcing techniques by employing mobile phones in urban environments. The proposed system uses microphone sensors available in most smartphones, along with an array of other inputs, to create a database which could later be used for, among others, the development of map visualisation algorithms, research into how sounds are affected by the environment around, et cetera. The primary aim of this paper is to propose an economically feasible application model that is scaled easily by the number of users and establishes precedence for crowdsourced noise data collection.","2378-8143","978-1-6654-9232-4","10.1109/GCCE56475.2022.10014205","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10014205","Noise Mapping;Urban Soundscape;Crowd-Souring;Sound Data Collection;Smart Phone;Human-Computer Interaction.","Pollution;Urban areas;Data collection;Data models;Sensor systems;Microphone arrays;Sensors","","","","10","IEEE","18 Jan 2023","","","IEEE","IEEE Conferences"
"Developing and Deploying Mobile Sensing Applications in the Wild","C. Mascolo","University of Cambridge, Cambridge, Cambridgeshire, GB",2016 17th IEEE International Conference on Mobile Data Management (MDM),"21 Jul 2016","2016","1","","1","1","With the advent of powerful and inexpensive sensingtechnology the ability to study human behaviour and activity at large scale and for long periods is becoming a firm reality. Wearables and mobile devices further allow the continuous physical colocation with the users. This reality generates new challenges but also opens the door to potentially innovative ways of understanding our daily lives. In this talk we will discuss our experience in large mobile sensor deployments. We will discuss the issues raised by mobile sensing big data in terms of data crowdsourcing, continuous sensing challenges, data analysis, privacy, user feedback. Examples will be drawn from our healthcare, transport, urban planning and organization analytics studies.","2375-0324","978-1-5090-0883-4","10.1109/MDM.2016.101","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7517769","","Mobile communication;Mobile computing;Conferences;Computers;Data analysis;Sensor systems","","","","","IEEE","21 Jul 2016","","","IEEE","IEEE Conferences"
"Group-based incentive and penalizing schemes for proactive participatory data sensing in IoT networks","M. B. Krishna","Guru Gobind Singh Indraprastha University, New Delhi, Delhi, IN",2018 IEEE 4th World Forum on Internet of Things (WF-IoT),"7 May 2018","2018","","","796","801","Quality of Information in IoT network is based on the fair degree of cooperation between the crowd sensing nodes, crowdsourcing nodes, mobile social nodes and cloud application servers. The constraints such as service reliability, node interaction credibility and data confidentiality impact the performance of data sensing systems. Incentive mechanisms encourage the active IoT nodes to transmit reliable data and secure the network. In this regard, this article proposes the GRoup-based Incentive and Penalizing Schemes for Proactive Participatory Data Sensing (GRIPS-PPDS) in IoT Network. GRIPS-PPDS applies the minimum set cover theorem to select the nodes that further sense and aggregate the data with high accuracy rate, consistency and reliability. The proposed model implements the rigid and relaxed modes for proactive data sensing in IoT network. Based on attributes such as quality of information, data accuracy rate, consistency, reliability and node trustworthiness, the GRIPS-PPDS scheme defines the incentive and penalizing factors to optimize the coverage region, minimize the energy consumption and secure the network. Simulation results indicate that the proposed model optimizes the coverage levels with enhanced data sensing and incentive cost for the relaxed mode PPDS as compared to the rigid mode PPDS.","","978-1-4673-9944-9","10.1109/WF-IoT.2018.8355208","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8355208","Data sensing;participatory crowd sensing;crowdsourcing;context match;reliability and trust incentive","Sensors;Task analysis;Reliability;Servers;Data models;Social groups;Crowdsourcing","","","","18","IEEE","7 May 2018","","","IEEE","IEEE Conferences"
"A Review of LinguaSnapp: a Crowd-sourcing Mobile App for Mapping Linguistic Landscape","Y. Li","School of Foreign Languages, Guangzhou Xinhua University, Dongguan, China","2022 IEEE Asia-Pacific Conference on Image Processing, Electronics and Computers (IPEC)","23 May 2022","2022","","","438","441","This paper offers a review of LinguaSnapp, a crowdsourcing smartphone app for collecting, archiving and analyzing linguistic landscape (LL) data. It compares the conventional linguistic landscaping process to the new mapping approach as provided by the LinguaSnapp app, which is specially designed to resolve the sore points of the old method with regards to data tagging, retrieval and geographic visualization. Also, this study gives a complete overview of the analytical descriptor menu of LinguaSnapp, namely, the submenus and choices within main menus of Language, Context and Analysis, which are at the core of this app that helps to describe the LL data photos in great detail. In addition, the advantages of the appointed editorial at the backend is also discussed. Furthermore, this paper probes into some of the potential drawbacks in LinguaSnapp, e.g. professional conceit may manifest in the editorial process, and the issues of copyright infringement and transfer.","","978-1-6654-0902-5","10.1109/IPEC54454.2022.9777515","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9777515","LinguaSnapp;Linguistic Landscape;Urban Planning;Language Policy;Multilingualism","Crowdsourcing;Electric potential;Image processing;Conferences;Data visualization;Linguistics;Tagging","","","","7","IEEE","23 May 2022","","","IEEE","IEEE Conferences"
"CrowdAL: Towards a Blockchain-empowered Active Learning System in Crowd Data Labeling","S. Hou; Y. Wang; Z. Zhao","Multiscale Networked Systems, University of Amsterdam, Amsterdam, The Netherlands; Multiscale Networked Systems, University of Amsterdam, Amsterdam, The Netherlands; Multiscale Networked Systems, University of Amsterdam, Amsterdam, The Netherlands",2024 IEEE 20th International Conference on e-Science (e-Science),"20 Sep 2024","2024","","","1","2","Active Learning (AL) is a machine learning technique where the model selectively queries the most informative data points for labeling by human experts. Integrating AL with crowdsourcing leverages crowd diversity to enhance data labeling but introduces challenges in consensus and privacy. This poster presents CrowdAL, a blockchain-empowered crowd AL system designed to address these challenges. CrowdAL integrates blockchain for transparency and a tamper-proof incentive mechanism, using smart contracts to evaluate crowd workers’ performance and aggregate labeling results, and employs zeroknowledge proofs to protect worker privacy.","2325-3703","979-8-3503-6561-0","10.1109/e-Science62913.2024.10678683","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10678683","Active Learning;Crowdsourcing;Blockchain;Zero Knowledge Proofs","Learning systems;Crowdsourcing;Privacy;Data privacy;Aggregates;Smart contracts;Machine learning","","","","6","IEEE","20 Sep 2024","","","IEEE","IEEE Conferences"
"Capacity of systems with queue-length dependent service quality","A. Chatterjee; D. Seo; L. R. Varshney","University of Illinois College of Law, Champaign, IL, US; Coordinated Science Laboratory, University of Illinois at Urbana-Champaign; Coordinated Science Laboratory, University of Illinois at Urbana-Champaign",2016 International Symposium on Information Theory and Its Applications (ISITA),"6 Feb 2017","2016","","","552","556","We study the information-theoretic limit of reliable information processing by a server with queue-length dependent quality of service. We define the capacity for such a system as the number of bits reliably processed per unit time, and characterize it in terms of queuing system parameters. We also characterize the distributions of the arrival and service processes that maximize and minimize the capacity of such systems, observing a minimum around the memoryless distribution. The problem is theoretically motivated by an effort to incorporate the notion of reliability in queueing systems, and is applicable in contexts of multimedia communication, crowdsourcing, and stream computing.","","978-4-88552-309-0","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7840485","","Servers;Reliability;Queueing analysis;Receivers;Transmitters;Timing;Crowdsourcing","","","","16","","6 Feb 2017","","","IEEE","IEEE Conferences"
"Open Data collection using mobile phones based on CKAN platform","K. Oświecińska; J. Legierski","Polsko-Japonska Akademia Technik, Warsaw, Poland; Faculty of Mathematics and Information Science, Warsaw University of Technology, Warsaw, Poland",2015 Federated Conference on Computer Science and Information Systems (FedCSIS),"9 Nov 2015","2015","","","1191","1196","This paper presents concept and prototype of universal easy-to-use and self-configurable mobile application dedicated for open data sets collection and sending them to the central database storage based on CKAN platform. This article describes the concept of open data collection in crowdsourcing model using mobile phones and also an architecture of end user application (CKAN client) dedicated for Android operating system.","","978-8-3608-1065-1","10.15439/2015F128","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7321578","","Resource description framework;Mobile applications;Data collection;Smart phones;Global Positioning System;Crowdsourcing","","","","22","","9 Nov 2015","","","IEEE","IEEE Conferences"
"Multisource Data Based Approach to Mapping Exposure and Seismic Vulnerability of Buildings in Tangshan Center, China","W. Qi; G. Su","Institute of Geology, China Earthquake Administration, Beijing, China; Institute of Geology, China Earthquake Administration, Beijing, China",IGARSS 2019 - 2019 IEEE International Geoscience and Remote Sensing Symposium,"14 Nov 2019","2019","","","9709","9712","This paper develops an approach that employs multisource data to map exposure and seismic vulnerability of buildings. This approach includes two interdependent parts: (1) estimating floor areas of buildings using Google Earth (GE) images and Tencent Street View and (2) identifying structural types of these buildings employing crowdsourcing data and associated building-relevant local knowledge (Br-LK). This approach was demonstrated in Tangshan, China. Field-based verification showed this approach has good accuracy.","2153-7003","978-1-5386-9154-0","10.1109/IGARSS.2019.8900542","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8900542","Multisource data;exposure;seismic vulnerability of buildings","Floors;Earthquakes;Germanium;Remote sensing;Correlation;Crowdsourcing","","","","5","IEEE","14 Nov 2019","","","IEEE","IEEE Conferences"
"Subtle consumer-photo quality evaluation","M. Saad; D. Nicholas; P. McKnight; J. Quartuccio; R. Jaladi; P. Corriveau","Intel Corporation, USA; Intel Corporation, USA; George Mason University, VA, USA; George Mason University, VA, USA; Intel Corporation, USA; Intel Corporation, USA",2016 IEEE International Conference on Image Processing (ICIP),"19 Aug 2016","2016","","","3778","3782","Subjective test methodologies are morphing to enable researchers to answer questions relevant to rapidly evolving technologies in an efficient and reliable manner. This paper is an exploration of how subjective testing that employs crowdsourcing can be refined to drive stability and reliability in subjective results. We investigate how various design decisions can lead to disparate subjective responses; motivated by the need for efficient acquisition of large volumes of data, and the need to understand and mitigate pitfalls in online tests, when the stimuli are complex and subtle as is the case in popular consumer scenarios.","2381-8549","978-1-4673-9961-6","10.1109/ICIP.2016.7533066","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7533066","subjective test;image quality assessment;crowdsourcing","Image quality;Visualization;Cameras;Crowdsourcing;Mobile handsets;Databases;Correlation","","","","17","IEEE","19 Aug 2016","","","IEEE","IEEE Conferences"
"Exploring the Role of Blockchain in Crowdfunding: Opportunities and Challenges in India","G. Krithick; K. Hemanth; D. C. Reddy; J. Arunnehru","Department of Computer Science & Engineering, SRMIST, Vadapalani, Chennai, India; Department of Computer Science & Engineering, SRMIST, Vadapalani, Chennai, India; Department of Computer Science & Engineering, SRMIST, Vadapalani, Chennai, India; Department of Computer Science & Engineering, SRMIST, Vadapalani, Chennai, India","2023 International Conference on Communication, Security and Artificial Intelligence (ICCSAI)","16 Feb 2024","2023","","","945","949","Crowdfunding is becoming popular for humanitarian, innovative, fiscally helpful, and socially influential donations. Current crowdfunding platforms lack stability, transparency, and efficiency. A severe downside People are interested in blockchain technology because it can solve these problems and change crowdfunding. Blockchain technology may boost transparency, efficiency, and trust. This paper examines blockchain's crowdsourcing possibilities and limitations. This will be done by reviewing the literature, analyzing pertinent case studies, and creating conceptual frameworks. The study will also evaluate the legal, technical, and economic effects of deploying blockchain technology for crowdfunding. This study will benefit scholars, practitioners, and policymakers interested in this expanding field. The information will help them understand blockchain technology's possibilities for crowdfunding platforms.","","979-8-3503-6996-0","10.1109/ICCSAI59793.2023.10421657","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10421657","Blockchain;Crowdfunding;Trust;Efficiency","Crowdfunding;Law;Stability analysis;Blockchains;Security;Thermal stability;Investment","","","","15","IEEE","16 Feb 2024","","","IEEE","IEEE Conferences"
"Worker Classification based on Answer Pattern for Finding Typical Mistake Patterns","T. Mikami; M. Matsubara; T. Harada; A. Morishima","College of Media Arts, Science and Technology, University of Tsukuba, Ibaraki, Japan; Faculty of Library, Information and Media Science, University of Tsukuba, Ibaraki, Japan; Faculty of Policy Studies, Doushisha University, Kyoto, Japan; Faculty of Library, Information and Media Science, University of Tsukuba, Ibaraki, Japan",2018 IEEE International Conference on Big Data (Big Data),"24 Jan 2019","2018","","","3529","3533","One of the problems in crowdsourcing is the development of appropriate instructions for workers. To improve task instructions, we must find typical mistake patterns. However, manually identifying these patterns is a cumbersome task. This study shows that a relatively simple approach classifying workers in terms of their understanding of task instructions is promising for addressing this issue. The verification results by domain experts suggest that the output is useful for improving task instructions.","","978-1-5386-5035-6","10.1109/BigData.2018.8622188","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8622188","crowdsourcing;task debugging;worker behavior","Task analysis;Crowdsourcing;Big Data;Media;Libraries;Quality control;Dogs","","","","14","IEEE","24 Jan 2019","","","IEEE","IEEE Conferences"
"Waze for Cities: An Effective Alternative for Traffic Study","V. Morocho; S. Munoz; J. Chica Carmona; E. Flores Juca","Computer Science Department, University of Cuenca, Cuenca, Ecuador; Computer Science Department, University of Cuenca, Cuenca, Ecuador; Faculty of Architecture and Urban Planning, University of Cuenca, Cuenca, Ecuador; Faculty of Architecture and Urban Planning, University of Cuenca, Cuenca, Ecuador",2024 IEEE ANDESCON,"25 Nov 2024","2024","","","1","6","This study explores the use of crowdsourcing data, specifically those provided by Waze for Cities, to obtain vehicular traffic data for the city of Cuenca to be used in mobility planning. A detailed methodology is presented that includes data extraction and preprocessing, as well as visualization through a dashboard and generation of a heat map. The usefulness of Waze as an agile and low-cost alternative to understand vehicular behavior in cities is highlighted.","2996-895X","979-8-3503-5528-4","10.1109/ANDESCON61840.2024.10755792","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10755792","waze;crowdsourcing;waze for cities;traffic","Crowdsourcing;Filtering;Urban areas;Decision making;Search problems;Real-time systems;Sensors;Planning;Data mining;Heat maps","","","","12","IEEE","25 Nov 2024","","","IEEE","IEEE Conferences"
"An Efficient Privacy-Preserving Data Matching Based on Bloom Filter and 0-1 Encoding","Y. Tang; C. Wu; L. Yan","Department of electronic information engineering, Shanghai Normal University, Shanghai, China; Department of electronic information engineering, Shanghai Normal University, Shanghai, China; Department of electronic information engineering, Shanghai Normal University, Shanghai, China","2024 5th International Seminar on Artificial Intelligence, Networking and Information Technology (AINIT)","11 Jul 2024","2024","","","858","862","The increasing popularity of mobile internet, cloud computing, and big data platforms has significantly brought the convenience to the use of crowdsourcing. Data matching plays a crucial role in the sharing economy, and it is particularly important to develop efficient data matching while ensuring data privacy-preserving. Our study focuses on addressing the data matching problem applicable to multiple data owners and multiple data requesters. We propose an efficient privacy preserving data matching scheme by using 0–1 encoding to safeguard data privacy, by utilizing bilinear pairings for keyword matching and Bloom Filters for data range matching. To alleviate the computational burden on data owners, computing tasks are allocated to cloud infrastructure. Additionally, Bloom Filters are employed to reduce computation time for data range queries. Then we demonstrate its feasibility and efficiency through experimental results.","","979-8-3503-8555-7","10.1109/AINIT61980.2024.10581817","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10581817","Data matching;Privacy preserving;Bilinear pairing;0–1 encoding;Bloom Filter","Seminars;Crowdsourcing;Data privacy;Cloud computing;Filters;Sharing economy;Encoding","","","","11","IEEE","11 Jul 2024","","","IEEE","IEEE Conferences"
"An Enhanced Indoor Localization System Using Crowdsourced Multi-Source Measurements","B. Yang; B. Li; L. Yang; N. Wu","School of Information and Electronics, Beijing Institute of Technology, Beijing, China; School of Information and Electronics, Beijing Institute of Technology, Beijing, China; School of Information and Electronics, Beijing Institute of Technology, Beijing, China; School of Information and Electronics, Beijing Institute of Technology, Beijing, China",2020 IEEE/CIC International Conference on Communications in China (ICCC),"9 Nov 2020","2020","","","788","793","With the rapid development of the mobile Internet, applications based on indoor localization have received increasing attention. In recent years, WiFi received signal strength (RSS) is widely used in indoor localization for the universally available WiFi infrastructure. However, the WiFi signal could easily be affected by non-line-of-sight and multipath propagation, which reduces the localization accuracy. In this paper, we propose an enhanced indoor localization system using multi-source measurements including WiFi RSS, ultra wideband (UWB) ranging, and inertial sensors to improve the performance. The multi-source measurements collected by users' smartphones are used for site survey in our system. To recover users' trajectories, we propose a crowdsourcing method to construct radio map. Moreover, a reference point clustering approach is used to improve system efficiency. A two-step localization method is proposed to locate a user. Experimental results show that the proposed system achieves better performance than only WiFi-based or UWB-based method.","2377-8644","978-1-7281-7327-6","10.1109/ICCC49849.2020.9238861","National Science Foundation of China(grant numbers:61201181,61471037,61571041); Beijing Institute of Technology Research Fund Program for Young Scholars(grant numbers:3050012222019); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9238861","indoor localization;multi-source measurements;crowdsourcing;clustering;hidden Markov model","Crowdsourcing;Hidden Markov models;Distance measurement;Trajectory;Wireless fidelity;Smart phones;Ultra wideband technology","","","","21","IEEE","9 Nov 2020","","","IEEE","IEEE Conferences"
"Discovering essential code elements in informal documentation","P. C. Rigby; M. P. Robillard","Department of Software Engineering, Concordia University, Montreal, QUE, Canada; School of Computer Science, McGill University, Montreal, QUE, Canada",2013 35th International Conference on Software Engineering (ICSE),"26 Sep 2013","2013","","","832","841","To access the knowledge contained in developer communication, such as forum posts, it is useful to determine automatically the code elements referred to in the discussions. We propose a novel traceability recovery approach to extract the code elements contained in various documents. As opposed to previous work, our approach does not require an index of code elements to find links, which makes it particularly well-suited for the analysis of informal documentation. When evaluated on 188 StackOverflow answer posts containing 993 code elements, the technique performs with average 0.92 precision and 0.90 recall. As a major refinement on traditional traceability approaches, we also propose to detect which of the code elements in a document are salient, or germane, to the topic of the post. To this end we developed a three-feature decision tree classifier that performs with a precision of 0.65-0.74 and recall of 0.30-0.65, depending on the subject of the document.","1558-1225","978-1-4673-3076-3","10.1109/ICSE.2013.6606629","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6606629","","Context;Indexes;Java;Documentation;Benchmark testing;Information retrieval;Compounds","","102","","12","IEEE","26 Sep 2013","","","IEEE","IEEE Conferences"
"""Jumping Through Hoops"": Why do Java Developers Struggle with Cryptography APIs?","S. Nadi; S. Krüger; M. Mezini; E. Bodden",Technische Universität Darmstadt; Technische Universität Darmstadt; Universität Paderborn & Fraunhofer IEM; Lancaster University,2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE),"3 Apr 2017","2016","","","935","946","To protect sensitive data processed by current applications, developers, whether security experts or not, have to rely on cryptography. While cryptography algorithms have become increasingly advanced, many data breaches occur because developers do not correctly use the corresponding APIs. To guide future research into practical solutions to this problem, we perform an empirical investigation into the obstacles developers face while using the Java cryptography APIs, the tasks they use the APIs for, and the kind of (tool) support they desire. We triangulate data from four separate studies that include the analysis of 100 StackOverflow posts, 100 GitHub repositories, and survey input from 48 developers. We find that while developers find it difficult to use certain cryptographic algorithms correctly, they feel surprisingly confident in selecting the right cryptography concepts (e.g., encryption vs. signatures). We also find that the APIs are generally perceived to be too low-level and that developers prefer more task-based solutions.","1558-1225","978-1-4503-3900-1","10.1145/2884781.2884790","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7886969","Cryptography;API misuse;empirical software engineering","Java;Encryption;Face;Public key;Libraries;Complexity theory","","95","","37","","3 Apr 2017","","","IEEE","IEEE Conferences"
"Automated construction of a software-specific word similarity database","Y. Tian; D. Lo; J. Lawall","Singapore Management University, Singapore; Singapore Management University, Singapore; Inria/LIP6 Regal","2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering (CSMR-WCRE)","27 Feb 2014","2014","","","44","53","Many automated software engineering approaches, including code search, bug report categorization, and duplicate bug report detection, measure similarities between two documents by analyzing natural language contents. Often different words are used to express the same meaning and thus measuring similarities using exact matching of words is insufficient. To solve this problem, past studies have shown the need to measure the similarities between pairs of words. To meet this need, the natural language processing community has built WordNet which is a manually constructed lexical database that records semantic relations among words and can be used to measure how similar two words are. However, WordNet is a general purpose resource, and often does not contain software-specific words. Also, the meanings of words in WordNet are often different than when they are used in software engineering context. Thus, there is a need for a software-specific WordNet-like resource that can measure similarities of words. In this work, we propose an automated approach that builds a software-specific WordNet like resource, named WordSimSEDB, by leveraging the textual contents of posts in StackOverflow. Our approach measures the similarity of words by computing the similarities of the weighted co-occurrences of these words with three types of words in the textual corpus. We have evaluated our approach on a set of software-specific words and compared our approach with an existing WordNet-based technique (WordNetres) to return top-k most similar words. Human judges are used to evaluate the effectiveness of the two techniques. We find that WordNetres returns no result for 55 % of the queries. For the remaining queries, WordNetres returns significantly poorer results.","","978-1-4799-3752-3","10.1109/CSMR-WCRE.2014.6747213","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6747213","","Java;Semantics;Software;Vectors;Software engineering;Measurement;Tuning","","55","","35","IEEE","27 Feb 2014","","","IEEE","IEEE Conferences"
"Towards a context-aware IDE-based meta search engine for recommendation about programming errors and exceptions","M. M. Rahman; S. Yeasmin; C. K. Roy","Computer Science, University of Saskatchewan, Canada; Computer Science, University of Saskatchewan, Canada; Computer Science, University of Saskatchewan, Canada","2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering (CSMR-WCRE)","27 Feb 2014","2014","","","194","203","Study shows that software developers spend about 19% of their time looking for information in the web during software development and maintenance. Traditional web search forces them to leave the working environment (e.g., IDE) and look for information in the web browser. It also does not consider the context of the problems that the developers search solutions for. The frequent switching between web browser and the IDE is both time-consuming and distracting, and the keyword-based traditional web search often does not help much in problem solving. In this paper, we propose an Eclipse IDE-based web search solution that exploits the APIs provided by three popular web search engines-Google, Yahoo, Bing and a popular programming Q & A site, StackOverflow, and captures the content-relevance, context-relevance, popularity and search engine confidence of each candidate result against the encountered programming problems. Experiments with 75 programming errors and exceptions using the proposed approach show that inclusion of different types of contextual information associated with a given exception can enhance the recommendation accuracy of a given exception. Experiments both with two existing approaches and existing web search engines confirm that our approach can perform better than them in terms of recall, mean precision and other performance measures with little computational cost.","","978-1-4799-3752-3","10.1109/CSMR-WCRE.2014.6747170","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6747170","IDE-based search;API mashup;Context-based search;Context code;Cosine similarity","Context;Web search;Programming;Search engines;Measurement;Equations;Mathematical model","","50","","18","IEEE","27 Feb 2014","","","IEEE","IEEE Conferences"
"Understanding and Classifying the Quality of Technical Forum Questions","L. Ponzanelli; A. Mocci; A. Bacchelli; M. Lanza","REVEAL@Faculty of Informatics, University of Lugano, Switzerland; REVEAL@Faculty of Informatics, University of Lugano, Switzerland; Technische Universiteit Delft, Delft, Zuid-Holland, NL; REVEAL@Faculty of Informatics, University of Lugano, Switzerland",2014 14th International Conference on Quality Software,"20 Nov 2014","2014","","","343","352","Technical questions and answers (Q&A) services have become a valuable resource for developers. A prominent example of technical Q&A website is StackOverflow (SO), which relies on a growing community of more than two millions of users who actively contribute by asking questions and providing answers. To maintain the value of this resource, poor quality questions -- among the more than 6,000 asked daily -- have to be filtered out. Currently, poor quality questions are manually identified and reviewed by selected users in SO, this costs considerable time and effort. Automating the process would save time and unload the review queue, improving the efficiency of SO as a resource for developers. We present an approach to automate the classification of questions according to their quality. We present an empirical study that investigates how to model and predict the quality of a question by considering as features both the contents of a post (e.g., from simple textual features to more complex readability metrics) and community-related aspects (e.g., popularity of a user in the community). Our findings show that there is indeed the possibility of at least a partial automation of the costly SO review process.","2332-662X","978-1-4799-7198-5","10.1109/QSIC.2014.27","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6958423","Q&A;Technical Forum;Quality;StackOverflow","Measurement;Decision trees;Communities;Entropy;Indexes;Predictive models;Feature extraction","","48","1","24","IEEE","20 Nov 2014","","","IEEE","IEEE Conferences"
"Can Everyone use my app? An Empirical Study on Accessibility in Android Apps","C. Vendome; D. Solano; S. Liñán; M. Linares-Vásquez","Miami University, Oxford, OH; Universidad de los Andes, Bogotá, Colombia; Universidad de los Andes, Bogota, Colombia; Universidad de los Andes, Bogota, Colombia",2019 IEEE International Conference on Software Maintenance and Evolution (ICSME),"5 Dec 2019","2019","","","41","52","Universal design principles aim to improve accessibility by ensuring product designs consider all users, including those with certain disabilities (e.g., visual impairments). In the case of mobile apps, accessibility is mostly provided by existing features in mobile devices, like TalkBack on Android that reads information to users. However, it is not clear to what extent developers actually implement universal design principles or utilize these technologies to support accessibility of their applications. By performing a mining-based pilot study, we observed developers seldom use Accessibility APIs and there is a limited usage of assistive descriptions. Then, we focused on understanding the perspective of developers through an investigation of posts from StackOverflow. We identified the aspects of accessibility that developers implemented as well as experienced difficulty (or lack of understanding). We performed a formal open-coding of 366 discussions threads with multi-author agreement to create a taxonomy regarding the aspects discussed by developers with respect to accessibility in Android. From the qualitative analysis, we distilled lessons to guide further research and actions in aiding developers with supporting users that require assistive features.","2576-3148","978-1-7281-3094-1","10.1109/ICSME.2019.00014","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8918937","Empirical Studies;Mobile Accessibility;Universal Design","Androids;Humanoid robots;Tools;Guidelines;Sociology;Statistics;Mobile handsets","","33","","50","IEEE","5 Dec 2019","","","IEEE","IEEE Conferences"
"NIRMAL: Automatic identification of software relevant tweets leveraging language model","A. Sharma; Y. Tian; D. Lo","School of Information Systems, Singapore Management University; School of Information Systems, Singapore Management University; School of Information Systems, Singapore Management University","2015 IEEE 22nd International Conference on Software Analysis, Evolution, and Reengineering (SANER)","9 Apr 2015","2015","","","449","458","Twitter is one of the most widely used social media platforms today. It enables users to share and view short 140-character messages called “tweets”. About 284 million active users generate close to 500 million tweets per day. Such rapid generation of user generated content in large magnitudes results in the problem of information overload. Users who are interested in information related to a particular domain have limited means to filter out irrelevant tweets and tend to get lost in the huge amount of data they encounter. A recent study by Singer et al. found that software developers use Twitter to stay aware of industry trends, to learn from others, and to network with other developers. However, Singer et al. also reported that developers often find Twitter streams to contain too much noise which is a barrier to the adoption of Twitter. In this paper, to help developers cope with noise, we propose a novel approach named NIRMAL, which automatically identifies software relevant tweets from a collection or stream of tweets. Our approach is based on language modeling which learns a statistical model based on a training corpus (i.e., set of documents). We make use of a subset of posts from StackOverflow, a programming question and answer site, as a training corpus to learn a language model. A corpus of tweets was then used to test the effectiveness of the trained language model. The tweets were sorted based on the rank the model assigned to each of the individual tweets. The top 200 tweets were then manually analyzed to verify whether they are software related or not, and then an accuracy score was calculated. The results show that decent accuracy scores can be achieved by various variants of NIRMAL, which indicates that NIRMAL can effectively identify software related tweets from a huge corpus of tweets.","1534-5351","978-1-4799-8469-5","10.1109/SANER.2015.7081855","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7081855","","Software;Twitter;Support vector machines;Training;Computational modeling;Mathematical model;Market research","","23","","30","IEEE","9 Apr 2015","","","IEEE","IEEE Conferences"
"Learning to Rank for Question-Oriented Software Text Retrieval (T)","Y. Zou; T. Ye; Y. Lu; J. Mylopoulos; L. Zhang","Software Institute, School of Electronics Engineering and Computer Science, Peking University, China; Software Institute, School of Electronics Engineering and Computer Science, Peking University, China; Software Institute, School of Electronics Engineering and Computer Science, Peking University, China; Department of Computer Science, University of Toronto, ON, Canada; Software Institute, School of Electronics Engineering and Computer Science, Peking University, China",2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE),"7 Jan 2016","2015","","","1","11","Question-oriented text retrieval, aka natural language-based text retrieval, has been widely used in software engineering. Earlier work has concluded that questions with the same keywords but different interrogatives (such as how, what) should result in different answers. But what is the difference? How to identify the right answers to a question? In this paper, we propose to investigate the ""answer style"" of software questions with different interrogatives. Towards this end, we build classifiers in a software text repository and propose a re-ranking approach to refine search results. The classifiers are trained by over 16,000 answers from the StackOverflow forum. Each answer is labeled accurately by its question's explicit or implicit interrogatives. We have evaluated the performance of our classifiers and the refinement of our re-ranking approach in software text retrieval. Our approach results in 13.1% and 12.6% respectively improvement with respect to text retrieval criteria nDCG@1 and nDCG@10 compared to the baseline. We also apply our approach to FAQs of 7 open source projects and show 13.2% improvement with respect to nDCG@1. The results of our experiments suggest that our approach could find answers to FAQs more precisely.","","978-1-5090-0025-8","10.1109/ASE.2015.24","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7371990","text retrieval;interrogative;classifier;rank","Software;Feature extraction;Indexes;Software engineering;Buildings;Training;Search engines","","22","","40","IEEE","7 Jan 2016","","","IEEE","IEEE Conferences"
"An Empirical Study on the Usage of the Swift Programming Language","M. Rebouças; G. Pinto; F. Ebert; W. Torres; A. Serebrenik; F. Castor","Federal University of Pernambuco, Recife, PE, Brazil; Federal University of Pernambuco, Recife, PE, Brazil; Federal University of Pernambuco, Recife, PE, Brazil; Federal University of Pernambuco, Recife, PE, Brazil; Eindhoven University of Technology, Eindhoven, The Netherlands; Federal University of Pernambuco, Recife, PE, Brazil","2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)","23 May 2016","2016","1","","634","638","Recently, Apple released Swift, a modern programming language built to be the successor of Objective-C. In less than a year and a half after its first release, Swift became one of the most popular programming languages in the world, considering different popularity measures. A significant part of this success is due to Apple's strict control over its ecosystem, and the clear message that it will replace Objective-C in a near future. According to Apple, ""Swift is a powerful and intuitive programming language[...]. Writing Swift code is interactive and fun, the syntax is concise yet expressive."" However, little is known about how Swift developers perceive these benefits. In this paper, we conducted two studies aimed at uncovering the questions and strains that arise from this early adoption. First, we perform a thorough analysis on 59,156 questions asked about Swift on StackOverflow. Second, we interviewed 12 Swift developers to cross-validate the initial results. Our study reveals that developers do seem to find the language easy to understand and adopt, although 17.5% of the questions are about basic elements of the language. Still, there are many questions about problems in the toolset (compiler, Xcode, libraries). Some of our interviewees reinforced these problems.","","978-1-5090-1855-0","10.1109/SANER.2016.66","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7476687","","Computer languages;Libraries;Interviews;Standards;Testing;Software;Programming","","20","","16","IEEE","23 May 2016","","","IEEE","IEEE Conferences"
"GRETA: Graph-Based Tag Assignment for GitHub Repositories","X. Cai; J. Zhu; B. Shen; Y. Chen","School of Electronic Information and Electrical Engineering, Shanghai Jiao Tong University, Shanghai, China; School of Electronic Information and Electrical Engineering, Shanghai Jiao Tong University, Shanghai, China; School of Electronic Information and Electrical Engineering, Shanghai Jiao Tong University, Shanghai, China; School of Electronic Information and Electrical Engineering, Shanghai Jiao Tong University, Shanghai, China",2016 IEEE 40th Annual Computer Software and Applications Conference (COMPSAC),"25 Aug 2016","2016","1","","63","72","GitHub is a well-known software community where a large number of software repositories are hosted. Since large amounts of documents and code in GitHub repositories are in a mess, users cannot search or understand them efficiently. One solution is to employ a tag system, which annotates each repository with several tags. Thus, the GitHub repositories can be more efficiently accessed and understood. However, GitHub does not provide any automated tools of tagging repositories. In order to tackle this problem, we propose GRETA, a novel graph-based approach to assigning tags for repositories on GitHub. The core insight of GRETA is (1) to construct an Entity-Tag Graph (ETG) for GitHub using the domain knowledge from StackOverflow, and (2) to assign tags for repositories by taking a random walk algorithm. We have implemented GRETA and also developed a repository search engine for GitHub using the tag assignment results of GRETA. We have evaluated GRETA against several baseline methods to investigate its effectiveness of tagging GitHub repositories. The results show GRETA achieves up to 35% of F-Measure, outperforming the baseline methods. Besides, the GRETA-based search engine gains a higher NDCG value than the search engine provided by GitHub, indicating that it significantly enhances the search ability on GitHub with the tagged repositories.","0730-3157","978-1-4673-8845-0","10.1109/COMPSAC.2016.124","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7551994","Tag assignment;GitHub;cross-community","Software;Tagging;Search engines;Dictionaries;Software algorithms;Electronic mail;Cascading style sheets","","20","","29","IEEE","25 Aug 2016","","","IEEE","IEEE Conferences"
"Surveying the Developer Experience of Flaky Tests","O. Parry; G. M. Kapfhammer; M. Hilton; P. McMinn","University of Sheffield, UK; Allegheny College, USA; Carnegie Mellon University, USA; University of Sheffield, UK",2022 IEEE/ACM 44th International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),"17 Jun 2022","2022","","","253","262","Test cases that pass and fail without changes to the code under test are known as flaky. The past decade has seen increasing research interest in flaky tests, though little attention has been afforded to the views and experiences of software developers. In this study, we utilized a multi-source approach to obtain insights into how developers define flaky tests, their experiences of the impacts and causes of flaky tests, and the actions they take in response to them. To that end, we designed a literature-guided developer survey that we deployed on social media, receiving 170 total responses. We also searched on StackOverflow and analyzed 38 threads relevant to flaky tests, offering a distinct perspective free of any self-reporting bias. Through a mixture of numerical and thematic analyses, this study reveals a number of findings, including (1) developers strongly agree that flaky tests hinder continuous integration; (2) developers who experience flaky tests more often may be more likely to ignore potentially genuine test failures; and (3) developers rate issues in setup and teardown to be the most common causes of flaky tests.","","978-1-6654-9590-5","10.1145/3510457.3513037","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9793965","Software Testing;Flaky Tests;Qualitative Research","Codes;Social networking (online);Software;Software engineering","","14","","50","","17 Jun 2022","","","IEEE","IEEE Conferences"
"An Observational Study on the State of REST API Uses in Android Mobile Applications","A. Belkhir; M. Abdellatif; R. Tighilt; N. Moha; Y. -G. Guéhéneuc; É. Beaudry","Université du Québéc à Montréal, Montréal, Canada; Université du Québéc à Montréal, Montréal, Canada; Polytechnique Montreal, Montreal, Canada; Concordia University, Montreal, Canada; Université du Québéc à Montréal, Montreal, Canada; Université du Québéc à Montréal, Montreal, Canada",2019 IEEE/ACM 6th International Conference on Mobile Software Engineering and Systems (MOBILESoft),"29 Aug 2019","2019","","","66","75","REST is by far the most commonly-used style for designing APIs, especially for mobile platforms. Indeed, REST APIs are well suited for providing content to apps running on small devices, like smart-phones and tablets. Several research works studied REST APIs development practices for mobile apps. However, little is known about how Android apps use/consume these APIs in practice through HTTP client libraries. Consequently, we propose an observational study on the state of the practice of REST APIs use in Android mobile apps. We (1) build a catalogue of Android REST mobile clients practices; (2) define each of these practices through a number of heuristics based on their potential implementations in Android apps, and (3) propose an automatic approach to detect these practices. We analyze 1,595 REST mobile apps downloaded from the Google Play Store and mine thousands of StackOverflow posts to study REST APIs uses in Android apps. We observe that developers have always used HttpURLConnection class for REST APIs implementation in Android apps. However, since the apparition of REST third-party libraries such as Okhttp, Retrofit and Google Volley, Android REST clients have been increasingly relying on the facilities offered by these libraries. Also, we observe that developers used to ignore some good practices of REST APIs uses in Android apps. Such practices are the use of HTTP third-party libraries, caching responses, timeout management, and error handling. Moreover, we report that only two good practices are widely considered by Android developers when implementing their mobile apps. These practices are network connectivity awareness and JSON vs. XML response parsing. We also find that Retrofit is the most targeted third-party HTTP client library by Android developers because of its ease of use and provided features. Thus, we conclude that service providers must strive to make their libraries as simple as possible while mobile-service consumers should consider existing libraries to benefit from their features, such as asynchronous requests, awareness to connectivity, timeout management, and cached responses.","","978-1-7281-3395-9","10.1109/MOBILESoft.2019.00020","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8816905","REST;API;Android;Mobile;Client;Practices","Libraries;Mobile applications;Google;Best practices;Tools;XML;Batteries","","14","","13","IEEE","29 Aug 2019","","","IEEE","IEEE Conferences"
"Finding Topical Experts in Question & Answer Communities","T. B. Procaci; B. P. Nunes; T. Nurmikko-Fuller; S. W. M. Siqueira","Department of Applied Informatics, UNIRIO, Rio de Janeiro, Brazil; Department of Applied Informatics, UNIRIO, Rio de Janeiro, Brazil; Oxford e-Research Centre, University of Oxford, Oxford, United Kingdom; Department of Applied Informatics, UNIRIO, Rio de Janeiro, Brazil",2016 IEEE 16th International Conference on Advanced Learning Technologies (ICALT),"1 Dec 2016","2016","","","407","411","Question and Answer (Q&A) communities (such as Stackoverflow) have become important places for information exchange and knowledge creation. Their success relies predominantly on two aspects of the feedback generated by their members: quality and speed. Of these, the former reflects on the reputation of the community, whilst the latter is indicative of the efficiency of the Q&A system to correctly answer a given question. In this paper, we present a three phase study for identifying and recommending topical experts in Q&A communities. The first phase investigates the most relevant criteria for identifying reputable members of the community (often experts in a given field), the second phase introduces an approach based on semantic annotations to ascertain their area of specialism, and the last phase presents a method to recommend experts to answer questions in their areas of expertise. Our evaluation (carried out using real-world data from the Biology Stack Exchange Q&A community) shows that the numbers of answers provided by each member can be used as reliable indicators of expertise, and semantic annotations can be successfully used to identify the topics in which they specialize. Furthermore, on average, 74% of the recommendations suggested by our method were successful.","2161-377X","978-1-4673-9041-5","10.1109/ICALT.2016.68","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7757009","topical experts;semantic annotations;user reputation;Q&A communities","Correlation;Semantics;Natural language processing;Reliability;Informatics;Biology;Collaboration","","12","","22","IEEE","1 Dec 2016","","","IEEE","IEEE Conferences"
"AI-based Test Automation: A Grey Literature Analysis","F. Ricca; A. Marchetto; A. Stocco","Università degli Studi di Genova, Genoa, Italy; Independent Researcher; Software Institute, USI, Switzerland","2021 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","28 May 2021","2021","","","263","270","This paper provides the results of a survey of the grey literature concerning the use of artificial intelligence to improve test automation practices. We surveyed more than 1,200 sources of grey literature (e.g., blogs, white-papers, user manuals, StackOverflow posts) looking for highlights by professionals on how AI is adopted to aid the development and evolution of test code. Ultimately, we filtered 136 relevant documents from which we extracted a taxonomy of problems that AI aims to tackle, along with a taxonomy of AI-enabled solutions to such problems. Manual code development and automated test generation are the most cited problem and solution, respectively. The paper concludes by distilling the six most prevalent tools on the market, along with think-aloud reflections about the current and future status of artificial intelligence for test automation.","","978-1-6654-4456-9","10.1109/ICSTW52544.2021.00051","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9440153","artificial intelligence;test automation;grey literature","Software testing;Automation;Conferences;Taxonomy;Blogs;Manuals;Tools","","11","","42","IEEE","28 May 2021","","","IEEE","IEEE Conferences"
"Bridge the terminology gap between recruiters and candidates: A multilingual skills base built from social media and linked data","E. Malherbe; M. -A. Aufaure","Multiposting, Paris, France; Multiposting, Paris, France",2016 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (ASONAM),"24 Nov 2016","2016","","","583","590","A major part of the job offers and candidates profiles are now available online. Leveraging this public data, Multiposting, a subsidiary of SAP, aims at providing in real-time an exhaustive job market analysis through the SmartSearch project. One big issue in this project, and more generally in the e-recruitment and the human resources management, is to extract the skills from the raw texts in order to associate a job or a candidate to its corresponding skills. This paper proposes to generate a multilingual base of skills in a novel bottom-up approach that finds its roots from the terminology used by candidates in professional social networks. The knowledge base is built by leveraging the Linked Open Data project DBpedia, as well as the tags of a Q&A website, StackOverflow. The large-scale experiments on real-world job offers show that the coverage and precision of the skills extraction are higher using this base than existing bases. The system has been implemented in industrial context and is used daily to extract the skills from thousands of documents, leading to advanced statistics as illustrated at the end this paper.","","978-1-5090-2846-7","10.1109/ASONAM.2016.7752295","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7752295","Information Extraction;Social Media;E-Recruitment;Text Normalization","Social network services;Knowledge based systems;Recruitment;Terminology;Data mining;Atmospheric modeling;Resumes","","10","1","18","IEEE","24 Nov 2016","","","IEEE","IEEE Conferences"
"Reducing Cognitive Load through the Worked Example Effect within a Serious Game Environment","B. Spieler; N. Pfaff; W. Slany","Institute of Mathematics and Applied Informatics, University of Hildesheim, Hildesheim, Germany; Institute of Software Technology, Graz University of Technology, Graz, Austria; Institute of Software Technology, Graz University of Technology, Graz, Austria",2020 6th International Conference of the Immersive Learning Research Network (iLRN),"4 Aug 2020","2020","","","1","8","Novices often struggle to represent problems mentally; the unfamiliar process can exhaust their cognitive resources, creating frustration that deters them from learning. By improving novices' mental representation of problems, worked examples improve both problem-solving skills and transfer performance. Programming requires both skills. In programming, it is not sufficient to simply understand how Stackoverflow examples work; programmers have to be able to adapt the principles and apply them to their own programs. This paper shows evidence in support of the theory that worked examples are the most efficient mode of instruction for novices. In the present study, 42 students were asked to solve the tutorial The Magic Word, a game especially for girls created with the Catrobat programming environment. While the experimental group was presented with a series of worked examples of code, the control groups were instructed through theoretical text examples. The final task was a transfer question. While the average score was not significantly better in the worked example condition, the fact that participants in this experimental group finished significantly faster than the control group suggests that their overall performance was better than that of their counterparts.","","978-1-7348995-0-4","10.23919/iLRN47897.2020.9155187","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9155187","programming;worked examples;cognitive load;games for education;problem-solving;gender","Problem-solving;Games;Tutorials;Search problems;Task analysis;Programming profession","","9","","29","","4 Aug 2020","","","IEEE","IEEE Conferences"
"Identifying Trends in Technologies and Programming Languages Using Topic Modeling","V. Johri; S. Bansal","Arizona State University, Informatics, and Decision Systems Engineering, Mesa, AZ; Arizona State University, Informatics, and Decision Systems Engineering, Mesa, AZ",2018 IEEE 12th International Conference on Semantic Computing (ICSC),"12 Apr 2018","2018","","","391","396","Technology question and answer websites are a great source of technical knowledge. Users of these websites raise various types of technical questions, and answer them. These questions cover a wide range of domains in Computer Science like Networks, Data Mining, Multimedia, Multi-threading, Web Development, Mobile App Development, etc. Analyzing the actual textual content of these websites can help computer science and software engineering community better understand the needs of developers and learn about the current trends in technology. In this project, textual data from famous question and answer website called StackOverflow, is analyzed using Latent Dirichlet Allocation (LDA) topic modeling algorithm. The results show that this techniques help discover dominant topics in developer discussions. These topics are analyzed to find a number of interesting observations such as popular technology/language, impact of a technology, technology trends over time, relationship of a technology/language with other technologies and comparison of technologies addressing an area of computer science or software engineering.","","978-1-5386-4408-9","10.1109/ICSC.2018.00078","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8334502","Topic modeling;Latent Dirichlet Allocation (LDA);Machine Learning;Natural Language Processing","Market research;Computer languages;Analytical models;Computational modeling;Resource management","","9","","9","IEEE","12 Apr 2018","","","IEEE","IEEE Conferences"
"Veteran developers' contributions and motivations: An open source perspective","P. Morrison; R. Pandita; E. Murphy-Hill; A. McLaughlin","Department of Computer Science, North Carolina State University, Raleigh, NC, USA; Department of Computer Science, North Carolina State University, Raleigh, NC, USA; Department of Computer Science, North Carolina State University, Raleigh, NC, USA; North Carolina State University, Raleigh, NC, US",2016 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC),"10 Nov 2016","2016","","","171","179","Decades of psychology and sociology research demonstrate that humans change cognitively and socially as they age, so it stands to reason that software developers likewise undergo changes that may affect their work. In this paper, we investigate age-related differences in software developers through the lens of open source software, which is built in communities that tend not to include older software developers. We report on the results of a qualitative panel discussion, then quantitatively analyze such veteran developers' activities on StackOverflow, to understand why few veteran software developers' participate in open source, and how their contributions to software development differ from their younger peers. Our results suggest that veterans' are less motivated by social interactions than their younger peers. Our results also suggest that veterans could contribute a broader knowledge of software development than their younger peers, as well as knowledge of old technologies that can be applied to newer technologies.","1943-6106","978-1-5090-0252-8","10.1109/VLHCC.2016.7739681","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7739681","","Engineering profession;Psychology;Aging;Companies;Open source software","","9","","50","IEEE","10 Nov 2016","","","IEEE","IEEE Conferences"
"Mining Energy-Related Practices in Robotics Software","M. Albonico; I. Malavolta; G. Pinto; E. Guzman; K. Chinnappan; P. Lago","Technological Federal University of Paraná - UTFPR, Brazil; Vrije Universiteit Amsterdam, The Netherlands; Federal University of Pará, Brazil; Vrije Universiteit Amsterdam, The Netherlands; Vrije Universiteit Amsterdam, The Netherlands; Vrije Universiteit Amsterdam, The Netherlands",2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR),"28 Jun 2021","2021","","","483","494","Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience.In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers and the official ROS Wiki).Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.","2574-3864","978-1-7281-8710-5","10.1109/MSR52588.2021.00060","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9463077","Energy consumption;Robotics;Software engeineering;Mining software repository","Industries;Service robots;Operating systems;Ecosystems;Software;Energy efficiency;Data mining","","9","","53","IEEE","28 Jun 2021","","","IEEE","IEEE Conferences"
"Unveiling the Mystery of API Evolution in Deep Learning Frameworks: A Case Study of Tensorflow 2","Z. Zhang; Y. Yang; X. Xia; D. Lo; X. Ren; J. Grundy","College of Computer Science and Technology, Zhejiang University, China; Faculty of Information Technology, Monash University, Australia; Faculty of Information Technology, Monash University, Australia; School of Information Systems, Singapore Management University, Singapore; College of Computer Science and Technology, Zhejiang University, China; Faculty of Information Technology, Monash University, Australia",2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),"7 May 2021","2021","","","238","247","API developers have been working hard to evolve APIs to provide more simple, powerful, and robust API libraries. Although API evolution has been studied for multiple domains, such as Web and Android development, API evolution for deep learning frameworks has not yet been studied. It is not very clear how and why APIs evolve in deep learning frameworks, and yet these are being more and more heavily used in industry. To fill this gap, we conduct a large-scale and in-depth study on the API evolution of Tensorflow 2, which is currently the most popular deep learning framework. We first extract 6,329 API changes by mining API documentation of Tensorflow 2 across multiple versions and mapping API changes into functional categories on the Tensorflow 2 framework to analyze their API evolution trends. We then investigate the key reasons for API changes by referring to multiple information sources, e.g., API documentation, commits and StackOverflow. Finally, we compare API evolution in non-deep learning projects to that of Tensorflow 2, and identify some key implications for users, researchers, and API developers.","","978-1-6654-3869-8","10.1109/ICSE-SEIP52600.2021.00033","Australian Research Council; National Research Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9402075","API evolution;API documentation;Deep learning;Tensorflow 2","Deep learning;Industries;Documentation;Market research;Libraries;Software engineering","","8","","39","IEEE","7 May 2021","","","IEEE","IEEE Conferences"
"Entity disambiguation in tweets leveraging user social profiles","S. R. Yerva; M. Catasta; G. Demartini; K. Aberer","San Francisco, CA, USA; San Francisco, CA, USA; San Francisco, CA, USA; San Francisco, CA, USA",2013 IEEE 14th International Conference on Information Reuse & Integration (IRI),"24 Oct 2013","2013","","","120","128","Pervasive web and social networks are becoming part of everyone's life. Users through their activities on these networks are leaving traces of their expertise, interests and personalities. With the advances in Web mining and user modeling techniques it is possible to leverage the user social network activity history to extract the semantics of user-generated content. In this work we explore various techniques for constructing user profiles based on the content they publish on social networks. We further show that one of the advantages of maintaining social network user profiles is to provide the context for better understanding of microposts. We propose and experimentally evaluate different approaches for entity disambiguation in social networks based on syntactic and semantic features on top of two different social networks: a general-interest network (i.e., Twitter) and a domain-specific network (i.e., StackOverflow). We demonstrate how disambiguation accuracy increases when considering enriched user profiles integrating content from both social networks.","","978-1-4799-1050-2","10.1109/IRI.2013.6642462","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6642462","","Companies;Twitter;Context;Semantics;User-generated content;Data mining","","6","3","30","IEEE","24 Oct 2013","","","IEEE","IEEE Conferences"
"Towards Sparsification of Graph Neural Networks","H. Peng; D. Gurevin; S. Huang; T. Geng; W. Jiang; O. Khan; C. Ding","University of Connecticut, CT, USA; University of Connecticut, CT, USA; University of Connecticut, CT, USA; University of Rochester, NY, USA; George Mason University, VA, USA; University of Connecticut, CT, USA; University of Connecticut, CT, USA",2022 IEEE 40th International Conference on Computer Design (ICCD),"19 Dec 2022","2022","","","272","279","As real-world graphs expand in size, larger GNN models with billions of parameters are deployed. High parameter count in such models makes training and inference on graphs expensive and challenging. To reduce the computational and memory costs of GNNs, optimization methods such as pruning the redundant nodes and edges in input graphs have been commonly adopted. However, model compression, which directly targets the sparsification of model layers, has been mostly limited to traditional Deep Neural Networks (DNNs) used for tasks such as image classification and object detection. In this paper, we utilize two state-of-the-art model compression methods (1) train and prune and (2) sparse training for the sparsification of weight layers in GNNs. We evaluate and compare the efficiency of both methods in terms of accuracy, training sparsity, and training FLOPs on real-world graphs. Our experimental results show that on the ia-email, wiki-talk, and stackoverflow datasets for link prediction, sparse training with much lower training FLOPs achieves a comparable accuracy with the train and prune method. On the brain dataset for node classification, sparse training uses a lower number FLOPs Oess than 1/7 FLOPs of train and prune method) and preserves a much better accuracy performance under extreme model sparsity. Our model sparsification code is publicly available on GitHubl1.","2576-6996","978-1-6654-6186-3","10.1109/ICCD56317.2022.00048","National Science Foundation; Semiconductor Research Corporation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9978504","graph;GNN;sparsification;model compression;sparse training;Surrogate Lagrangian Relaxation (SLR)","Training;Image coding;Costs;Computational modeling;Image edge detection;Optimization methods;Computer architecture","","6","","79","IEEE","19 Dec 2022","","","IEEE","IEEE Conferences"
"Source Code Summarization Using Attention-Based Keyword Memory Networks","Y. Choi; S. Kim; J. -H. Lee","dept. of Software, Sungkyunkwan University, Suwon, Korea; dept. of Electrical and Computer Engineering, Sungkyunkwan University, Suwon, Korea; dept. of Software, Sungkyunkwan University, Suwon, Korea",2020 IEEE International Conference on Big Data and Smart Computing (BigComp),"20 Apr 2020","2020","","","564","570","Recently, deep learning techniques have been developed for source code summarization. Most existing studies have simply adopted natural language processing techniques, because source code summarization can be considered as machine translation tasks from source code into descriptions. However, source code and its description are very different, not only in the languages of writing, but also in the purpose of writing. There is a large semantic gap between source codes in programming languages and their descriptions in natural languages. To respond to the semantic gap, we propose a two-phase model that consists of a keyword predictor and a description generator. The keyword predictor captures the natural language keywords semantically associated with the source code, and the generator generates a description by referring to the natural language keywords provided by the predictor. Using such keywords as scaffolding, we can effectively reduce the semantic gap and generate more accurate descriptions of source codes. To evaluate the proposed method, we use datasets collected from GitHub and StackOverflow. We perform various experiments with these datasets. Our methods show outstanding performance compared with baselines that include state-of-the-art methods, which concludes that keyword prediction is very helpful to the generation of accurate descriptions.","2375-9356","978-1-7281-6034-4","10.1109/BigComp48618.2020.00011","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9070483","Source Code Summarization, Keyword Memory Networks","Natural languages;Predictive models;Mathematical model;Generators;Semantics;Task analysis;Writing","","5","","29","IEEE","20 Apr 2020","","","IEEE","IEEE Conferences"
"pycefr: Python Competency Level through Code Analysis","G. Robles; R. G. Kula; C. Ragkhitwetsagul; T. Sakulniwat; K. Matsumoto; J. M. Gonzalez-Barahona","Universidad Rey Juan Carlos, Madrid, Spain; NAIST, Nara, Japan; Faculty of ICT, Mahidol University Nakhon, Pathom, Thailand; NAIST, Nara, Japan; NAIST, Nara, Japan; Universidad Rey Juan Carlos, Madrid, Spain",2022 IEEE/ACM 30th International Conference on Program Comprehension (ICPC),"22 Jun 2022","2022","","","173","177","Python is known to be a versatile language, well suited both for beginners and advanced users. Some elements of the language are easier to understand than others: some are found in any kind of code, while some others are used only by experienced programmers. The use of these elements lead to different ways to code, depending on the experience with the language and the knowledge of its elements, the general programming competence and programming skills, etc. In this paper, we present pycefr, a tool that detects the use of the different elements of the Python language, effectively measuring the level of Python proficiency required to comprehend and deal with a fragment of Python code. Following the well-known Common European Framework of Reference for Languages (CEFR), widely used for natural languages, pycefr categorizes Python code in six levels, depending on the proficiency required to create and understand it. We also discuss different use cases for pycefr: iden-tifying code snippets that can be understood by developers with a certain proficiency, labeling code examples in online resources such as Stackoverflow and GitHub to suit them to a certain level of competency, helping in the onboarding process of new developers in Open Source Software projects, etc. A video shows availability and usage of the tool: https://tinyurl.com/ypdt3fwe.","2643-7171","978-1-4503-9298-3","10.1145/3524610.3527878","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9796232","Python;coding idioms;CEFR;software comprehension;competences;onboarding;education","Codes;Natural languages;Europe;Programming;Labeling;Open source software;Python","","5","","32","","22 Jun 2022","","","IEEE","IEEE Conferences"
"DepOwl: Detecting Dependency Bugs to Prevent Compatibility Failures","Z. Jia; S. Li; T. Yu; C. Zeng; E. Xu; X. Liu; J. Wang; X. Liao","College of Computer Science, National University of Defense Technology Changsha, China; College of Computer Science, National University of Defense Technology Changsha, China; Department of Computer Science, University of Kentucky Lexington, USA; College of Computer Science, National University of Defense Technology Changsha, China; College of Computer Science, National University of Defense Technology Changsha, China; College of Computer Science, National University of Defense Technology Changsha, China; College of Computer Science, National University of Defense Technology Changsha, China; College of Computer Science, National University of Defense Technology Changsha, China",2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE),"7 May 2021","2021","","","86","98","Applications depend on libraries to avoid reinventing the wheel. Libraries may have incompatible changes during evolving. As a result, applications will suffer from compatibility failures. There has been much research on addressing detecting incompatible changes in libraries, or helping applications co-evolve with the libraries. The existing solution helps the latest application version work well against the latest library version as an afterthought. However, end users have already been suffering from the failures and have to wait for new versions. In this paper, we propose DepOwl, a practical tool helping users prevent compatibility failures. The key idea is to avoid using incompatible versions from the very beginning. We evaluated DepOwl on 38 known compatibility failures from StackOverflow, and DepOwl can prevent 35 of them. We also evaluated DepOwl using the software repository shipped with Ubuntu-19.10. DepOwl detected 77 unknown dependency bugs, which may lead to compatibility failures.","1558-1225","978-1-6654-0296-5","10.1109/ICSE43902.2021.00021","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9402138","Software dependency;Library incompatibility;Compatibility failure","Computer bugs;Wheels;Tools;Libraries;Software;Software reliability;Software engineering","","5","","63","IEEE","7 May 2021","","","IEEE","IEEE Conferences"
"Combining Extreme Multi-label Classification and Principal Label Space Transformation for Cold Start Thread Recommendation","K. Jitharn; E. Pacharawongsakda","Big Data Engineering Program College of Innovative Technology and Engineering Dhurakij Pundit University, Bangkok, Thailand; Big Data Engineering Program College of Innovative Technology and Engineering Dhurakij Pundit University, Bangkok, Thailand",2019 14th International Joint Symposium on Artificial Intelligence and Natural Language Processing (iSAI-NLP),"26 Mar 2020","2019","","","1","7","The recommendation system has been widely used in various areas, e.g., entertainment, education, and travel. However, this technique faces two main challenges which are Cold Start and High-Dimensionality problems. The cold start happens when the system does not have enough profile of new users; therefore, the system cannot recommend products to them. The second issue comes from the fact that there are a lot of distinct products or users to be recommended. Recently, Extreme Multi-label Classification (XMLC) has been applied to the recommendation system and addressed the Cold Start issue. However, the previous method still has a high-dimensionality issue. In this paper, we proposed a new approach, namely XMLC-PAO, which integrated label space reduction with XMLC. In more details, we transformed the recommendation problem to XMLC and applied Singular Value Decomposition (SVD) to generate reducing operator of label space (products' or users' label space). For the feature space, Deep Learning technique has been used to extract features from texts. From the experiments with Stackoverflow online forums dataset, we have found that the XMLC-PAO showed better performance in terms of RECALL@M and NDCG@M when the dimensions were reduced to 50% and 80% of the original size.","","978-1-7281-5631-6","10.1109/iSAI-NLP48611.2019.9045139","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9045139","extreme multi-label classification;recommendation system;cold start problem;singular value decomposition - SVD","Feature extraction;Predictive models;Neural networks;Singular value decomposition;Hypercubes;Instruction sets;Transforms","","4","","9","IEEE","26 Mar 2020","","","IEEE","IEEE Conferences"
"VizSmith: Automated Visualization Synthesis by Mining Data-Science Notebooks","R. Bavishi; S. Laddad; H. Yoshida; M. R. Prasad; K. Sen","University of California, Berkeley; University of California, Berkeley; Fujitsu Research of America; Fujitsu Research of America; University of California, Berkeley",2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE),"20 Jan 2022","2021","","","129","141","Visualizations are widely used to communicate findings and make data-driven decisions. Unfortunately creating bespoke and reproducible visualizations requires the use of procedural tools such as matplotlib. These tools present a steep learning curve as their documentation often lacks sufficient usage examples to help beginners get started or accomplish a specific task. Forums such as StackOverflow have long helped developers search for code online and adapt it for their use. However, developers still have to sift through search results and understand the code before adapting it for their use.We built a tool called VizSmith which enables code reuse for visualizations by mining visualization code from Kaggle notebooks and creating a database of 7176 reusable Python functions. Given a dataset, columns to visualize and a text query from the user, VizSmith searches this database for appropriate functions, runs them and displays the generated visualizations to the user. At the core of VizSmith is a novel metamorphic testing based approach to automatically assess the reusability of functions, which improves end-to-end synthesis performance by 10% and cuts the number of execution failures by 50%.","2643-1572","978-1-6654-0337-5","10.1109/ASE51524.2021.9678696","Fujitsu; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9678696","","Visualization;Codes;Documentation;Benchmark testing;Visual databases;Task analysis;Python","","4","","47","IEEE","20 Jan 2022","","","IEEE","IEEE Conferences"
"Multistaging to understand: Distilling the essence of java code examples","H. Sanchez; J. Whitehead; M. Schäf","SRI International; University of California, Santa Cruz; SRI International",2016 IEEE 24th International Conference on Program Comprehension (ICPC),"7 Jul 2016","2016","","","1","10","Programmers commonly search the Web to find code examples that can help them solve a specific programming task. While some novice programmers may be willing to spend as much time as needed to understand a found code example, more experienced ones want to spend as little time as possible. They want to get a quick overview of the example's operation, so they can start working with it immediately. Getting this overview is often non-trivial and requires a tedious and manual inspection process. In this paper, we introduce a technique called Multi-staging to Understand, which streamlines this inspection process by distilling the essence of code examples. The essence of a code example conveys the most important aspects of the example's intended function. Our technique automatically decomposes the code in an example into code stages that can be explored non-sequentially; enabling fast exploratory learning. We discuss the key components of our technique and describe empirical results based on actual code examples on StackOverflow.","","978-1-5090-1428-6","10.1109/ICPC.2016.7503708","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7503708","","Java;Indexes;Inspection;Algorithms;Electronic mail;Web search;Engines","","4","","26","IEEE","7 Jul 2016","","","IEEE","IEEE Conferences"
"ARCLIN: Automated API Mention Resolution for Unformatted Texts","Y. Huo; Y. Su; H. Zhang; M. R. Lyu","The Chinese University of Hong Kong, Hong Kong, China; School of Software Engineering, Sun Yat-sen University, Zhuhai, China; The Hong Kong University of Science and Technology, Hong Kong, China; The Chinese University of Hong Kong, Hong Kong, China",2022 IEEE/ACM 44th International Conference on Software Engineering (ICSE),"20 Jun 2022","2022","","","138","149","Online technical forums (e.g., StackOverflow) are popular platforms for developers to discuss technical problems such as how to use a specific Application Programming Interface (API), how to solve the programming tasks, or how to fix bugs in their code. These discussions can often provide auxiliary knowledge of how to use the software that is not covered by the official documents. The automatic extraction of such knowledge may support a set of down-stream tasks like API searching or indexing. However, unlike official documentation written by experts, discussions in open forums are made by regular developers who write in short and informal texts, including spelling errors or abbreviations. There are three major challenges for the accurate APIs recognition and linking mentioned APIs from unstructured natural language documents to an entry in the API repository: (1) distinguishing API mentions from common words; (2) identifying API mentions without a fully qualified name; and (3) disambiguating API mentions with similar method names but in a different library. In this paper, to tackle these challenges, we propose an ARCLIN tool, which can effectively distinguish and link APIs without using human annotations. Specifically, we first design an API recognizer to automatically extract API mentions from natural language sentences by a Conditional Random Field (CRF) on the top of a Bi-directional Long Short-Term Memory (Bi-LSTM) module, then we apply a context-aware scoring mechanism to compute the mention-entry similarity for each entry in an API repository. Compared to previous approaches with heuristic rules, our proposed tool without manual inspection outperforms by 8% in a high-quality dataset Py-mention, which contains 558 mentions and 2,830 sentences from five popular Python libraries. To our best knowledge, ARCLIN is the first approach to achieve full automation of API mention resolution from unformatted text without manually collected labels.","1558-1225","978-1-4503-9221-1","10.1145/3510003.3510158","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9793898","API;API disambiguation;text mining","Training;Text recognition;Natural languages;Manuals;Programming;Libraries;Software","","3","","43","","20 Jun 2022","","","IEEE","IEEE Conferences"
"Joint Model of Topics, Expertises, Activities and Trends for Question Answering Web Applications","Z. Meng; F. Gandon; C. F. Zucker","INRIA SAM, France; INRIA SAM, France; Université Nice Sophia Antipolis, France",2016 IEEE/WIC/ACM International Conference on Web Intelligence (WI),"16 Jan 2017","2016","","","296","303","Users in question-answer sites generate huge amounts of high quality and highly reusable information. This information can be categorized by topics but since users' interests change with time, uncovering the temporal patterns and trends in their activity is of prime interest to detect their current expertize. These temporal variations have long remained unexplored in question-answer sites while detecting them enables us to improve tasks such as: question routing, expert recommending and community life-cycle management. In this paper, we propose a generative model of such a community and its dynamics, and we perform experiments with real-world data extracted from the StackOverflow website to confirm the effectiveness of our model to study the users' behaviors and topics dynamics.","","978-1-5090-4470-2","10.1109/WI.2016.0049","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7817066","Topic modeling;Temporal analysis;Probabilistic graphical model;Community Question Answering;Question routing","Market research;Databases;Routing;Data models;Data mining;Feature extraction;Training data","","3","","21","IEEE","16 Jan 2017","","","IEEE","IEEE Conferences"
"Collaboration Analysis in Global Software Development","V. Horta; V. Ströele; V. Schettino; J. Oliveira; J. Maria David; M. A. P. Araújo","Computer Science Postgraduate Program, Federal University of Juiz de Fora, Juiz de Fora, Brazil; Computer Science Postgraduate Program, Federal University of Juiz de Fora, Juiz de Fora, Brazil; Computer Science Postgraduate Program, Federal University of Juiz de Fora, Juiz de Fora, Brazil; Computer Science Department, Federal University of Rio de Janeiro, Juiz de Fora, Brazil; Computer Science Postgraduate Program, Federal University of Juiz de Fora, Juiz de Fora, Brazil; Computer Science Postgraduate Program, Federal University of Juiz de Fora, Juiz de Fora, Brazil",2019 IEEE 23rd International Conference on Computer Supported Cooperative Work in Design (CSCWD),"8 Aug 2019","2019","","","464","469","In global software development distributed teams are often challenged by global distances, such as cultural diversity and linguistic barriers. This stimulates the search for groups of people that can work together and collaborate in a positive way, even though they are working in a distributed environment. In addition, the demand for high quality software motivates the search for experienced developers who are able to solve complex tasks or to help others with their own tasks. This work aims to detect experts and to identify collaborative groups with experienced members in some topics of software development. To achieve these goals the StackOverflow forum was used and modeled as a complex network. The presented method uses NetSCAN algorithm to detect overlapping communities, expert developers and their topics of expertise in social networks. Through a temporal analysis over the social network multidisciplinary developers were found as well as people who are changing their interests over time. In a first evaluation a statistic test showed that experts (indicated by the proposed method) have a higher performance than common users. A second evaluation showed that these experts are suitable for recommendation systems in question-answer forums.","","978-1-7281-0350-1","10.1109/CSCWD.2019.8791857","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8791857","social network analysis;community detection;expert location;stackoverflow;software development","Collaboration;Social networking (online);Software;Computer science;Image edge detection;Databases;Collaborative work","","3","","18","IEEE","8 Aug 2019","","","IEEE","IEEE Conferences"
"(Partial) Program Dependence Learning","A. Yadavally; T. N. Nguyen; W. Wang; S. Wang","Computer Science Department, The University of Texas at Dallas, Texas, USA; Computer Science Department, The University of Texas at Dallas, Texas, USA; Department of Informatics, New Jersey Institute of Technology, New Jersey, USA; Department of Informatics, New Jersey Institute of Technology, New Jersey, USA",2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE),"14 Jul 2023","2023","","","2501","2513","Code fragments from developer forums often migrate to applications due to the code reuse practice. Owing to the incomplete nature of such programs, analyzing them to early determine the presence of potential vulnerabilities is challenging. In this work, we introduce NeuralPDA, a neural network-based program dependence analysis tool for both complete and partial programs. Our tool efficiently incorporates intra-statement and inter-statement contextual features into statement representations, thereby modeling program dependence analysis as a statement-pair dependence decoding task. In the empirical evaluation, we report that NeuralPDA predicts the CFG and PDG edges in complete Java and C/C++ code with combined F-scores of 94.29% and 92.46%, respectively. The F-score values for partial Java and C/C++ code range from 94.29%-97.17% and 92.46%-96.01%, respectively. We also test the usefulness of the PDGs predicted by NeuralPDA (i.e., PDG*) on the downstream task of method-level vulnerability detection. We discover that the performance of the vulnerability detection tool utilizing PDG* is only 1.1% less than that utilizing the PDGs generated by a program analysis tool. We also report the detection of 14 real-world vulnerable code snippets from StackOverflow by a machine learning-based vulnerability detection tool that employs the PDGs predicted by NeuralPDA for these code snippets.","1558-1225","978-1-6654-5701-9","10.1109/ICSE48619.2023.00209","US National Science Foundation (NSF)(grant numbers:CNS-2120386); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10172603","neural partial program analysis;neural program dependence analysis;neural networks;deep learning","Java;Analytical models;Codes;Image edge detection;Neural networks;Decoding;Task analysis","","2","","55","IEEE","14 Jul 2023","","","IEEE","IEEE Conferences"
"Mutation-based Fault Localization of Deep Neural Networks","A. Ghanbari; D. -G. Thomas; M. A. Arshad; H. Rajan","Dept. of Computer Science, Iowa State University, Ames, Iowa, USA; Dept. of Computer Science, Iowa State University, Ames, Iowa, USA; Dept. of Computer Science, Iowa State University, Ames, Iowa, USA; Dept. of Computer Science, Iowa State University, Ames, Iowa, USA",2023 38th IEEE/ACM International Conference on Automated Software Engineering (ASE),"8 Nov 2023","2023","","","1301","1313","Deep neural networks (DNNs) are susceptible to bugs, just like other types of software systems. A significant uptick in using DNN, and its applications in wide-ranging areas, including safety-critical systems, warrant extensive research on software engineering tools for improving the reliability of DNN-based systems. One such tool that has gained significant attention in the recent years is DNN fault localization. This paper revisits mutation-based fault localization in the context of DNN models and proposes a novel technique, named deepmufl, applicable to a wide range of DNN models. We have implemented deepmufl and have evaluated its effectiveness using 109 bugs obtained from StackOverflow. Our results show that deepmufl detects 53/109 of the bugs by ranking the buggy layer in top-1 position, outperforming state-of-the-art static and dynamic DNN fault localization systems that are also designed to target the class of bugs supported by deepmufl. Moreover, we observed that we can halve the fault localization time for a pre-trained model using mutation selection, yet losing only 7.55% of the bugs localized in ton-1 position.","2643-1572","979-8-3503-2996-4","10.1109/ASE56229.2023.00171","National Science Foundation(grant numbers:2127309,2223812,2120448,1934884); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10298394","Deep Neural Network;Mutation;Fault Localization","Location awareness;Computer bugs;Artificial neural networks;Benchmark testing;Software systems;Reliability engineering;Data models","","1","","63","IEEE","8 Nov 2023","","","IEEE","IEEE Conferences"
"Siambert: Siamese Bert-based Code Search","F. J. Peña; A. L. Gonzalez; S. Pashami; A. Al-Shishtawy; A. H. Payberah","KTH Royal Institute of Technology, Stockholm, Sweden; KTH Royal Institute of Technology, Stockholm, Sweden; RISE Research Institutes of Sweden, Stockholm, Sweden; RISE Research Institutes of Sweden, Stockholm, Sweden; KTH Royal Institute of Technology, Stockholm, Sweden",2022 Swedish Artificial Intelligence Society Workshop (SAIS),"22 Jul 2022","2022","","","1","7","Code Search is a practical tool that helps developers navigate growing source code repositories by connecting natural language queries with code snippets. Platforms such as StackOverflow resolve coding questions and answers; however, they cannot perform a semantic search through the code. Moreover, poorly documented code adds more complexity to search for code snippets in repositories. To tackle this challenge, this paper presents Siambert, a BERT-based model that gets the question in natural language and returns relevant code snippets. The Siambert architecture consists of two stages, where the first stage, inspired by Siamese Neural Network, returns the top K relevant code snippets to the input questions, and the second stage ranks the given snippets by the first stage. The experiments show that Siambert outperforms non-BERT-based models having improvements that range from 12% to 39% on the Recall@1 metric and improves the inference time performance, making it 15x faster than standard BERT models.","","978-1-6654-7126-8","10.1109/SAIS55783.2022.9833051","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9833051","","Measurement;Codes;Semantic search;Navigation;Conferences;Natural languages;Neural networks","","1","","33","IEEE","22 Jul 2022","","","IEEE","IEEE Conferences"
"Private-Keep Out? Understanding How Developers Account for Code Visibility in Unit Testing","M. F. Roslan; J. M. Rojas; P. McMinn","University of Sheffield, UK; University of Sheffield, UK; University of Sheffield, UK",2024 IEEE International Conference on Software Maintenance and Evolution (ICSME),"19 Dec 2024","2024","","","312","324","Regression test maintenance costs can be reduced by striving to write tests that will require as few changes as possible in the future. Writing unit tests against behavior, as opposed to implementation, is one way to try to achieve this, because as long as the public API remains constant, units can be safely refactored without the need to also change the tests. However, in a study on 4,801 open-source Java projects reported in this paper, we found that 28% of projects contradict this advice, with tests that side-step the public API by directly calling non-public methods. We investigated why developers do not solely test public APIs-potentially increasing future test maintenance costs-by surveying 73 developers and conducting a systematic review of 60 StackOverflow posts dating from 2008–2023. Through numerical and thematic analyses, we uncover several findings, including (1) developers are disunited on whether to test only through public APIs or not; (2) those in favor of only testing through the public API tend to be more experienced and believe the need or desire to break with this is borne out of poor software design; while (3) those that test non-public methods directly are concerned about untested code complexity and overly intricate tests. Our findings provide multiple implications for future work, including automated developer support in the form of automated non-public method sequence replacement, and automated refactoring of production code using problematic public API-avoiding tests.","2576-3148","979-8-3503-9568-6","10.1109/ICSME58944.2024.00037","EPSRC(grant numbers:EP/X024539/1); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10795070","Test Maintenance;Test Smells;Unit Testing;Access Modifiers;Developer Survey;Unit Testing Practices","Surveys;Java;Software maintenance;Codes;Costs;Software design;Statistical analysis;Writing;Maintenance;Testing","","","","77","IEEE","19 Dec 2024","","","IEEE","IEEE Conferences"
"Understanding and Detecting Privacy Leakage Vulnerabilities in Hyperledger Fabric Chaincodes","Z. Chen; Y. Li; J. Gao; J. Zhang; K. Wang; J. Hu; Z. Guan; Z. Chen","School of Computer Science, Peking University, Beijing, China; College of Computer Science and Technology, Taiyuan University of Technology, Taiyuan, China; Beijing Key Laboratory of Security and Privacy in Intelligent Transportation, Beijing Jiaotong University, Beijing, China; School of Computer Science, Peking University, Beijing, China; School of Computer Science, Peking University, Beijing, China; School of Computer Science, Peking University, Beijing, China; National Engineering Research Center for Software Engineering, Peking University, Beijing, China; School of Computer Science, Peking University, Beijing, China",2024 IEEE 35th International Symposium on Software Reliability Engineering (ISSRE),"3 Dec 2024","2024","","","570","581","The application on a blockchain cannot maintain secrecy because its data is replicated across all peers in the network. To remedy this problem, Hyperledger Fabric introduces private data collection (PDC) into its smart contract (i.e. chaincode) to facilitate applications that require privacy. However, recent studies have revealed that PDC is too complex for chaincode developers to fully understand and use correctly, leading to privacy leaks vulnerabilities. In this paper, we present an empirical study on the prevalence of PDC misuse in chaincodes by extracting privacy leakage cases from StackOverflow posts and Hyperledger Fabric repositories on GitHub. Subsequently, we systematically categorize the misuse of PDC into three categories of vulnerabilities resulting in the leakage of private data and provide formal definitions for them. Furthermore, we develop PDChecker, an automated security analysis framework for identifying the privacy and security vulnerabilities in Fabric chaincodes. We evaluated PDChecker on 956 real-world chaincodes applying PDC and found that 67.78% of them contain at least one privacy leakage vulnerability. In addition, PDChecker uncovered 10 zero-day vulnerabilities documented by the China National Vulnerability Database.","2332-6549","979-8-3503-5388-4","10.1109/ISSRE62328.2024.00060","Research and Development; National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10771204","Hyperledger Fabric;private data collection;smart contract;chaincode;privacy;vulnerability detection","Privacy;Data privacy;Distributed ledger;Databases;Smart contracts;Fabrics;Blockchains;Software reliability;Security;Software development management","","","","39","IEEE","3 Dec 2024","","","IEEE","IEEE Conferences"
"Phrase2Set: Phrase-to-Set Machine Translation and Its Software Engineering Applications","T. V. Nguyen; A. Yadavally; T. N. Nguyen","Amazon, Washington, USA; Computer Science Department, University of Texas at Dallas, USA; Computer Science Department, University of Texas at Dallas, USA","2022 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)","21 Jul 2022","2022","","","502","513","Machine translation has been applied to software engineering (SE) problems, e.g., software tagging, language mi-gration, bug localization, auto program repair, etc. However, ma-chine translation primarily supports only sequence-to-sequence transformations and falls short during the translation/transfor-mation from a phrase or sequence in the input to a set in the output. An example of such a task is tagging the input text in a software library tutorial or a forum entry text with a set of API elements that are relevant to the input. In this work, we propose Phrase2Set, a context-sensitive statistical machine translation model that learns to transform a phrase of a mixture of code and texts into a set of code or text tokens. We first design a token-to-token algorithm that computes the probabilities of mapping individual tokens from phrases to sets. We propose a Bayesian network-based statistical machine translation model that uses these probabilities to decide a trans-lation process that maximizes the joint translation probability. To achieve that, we consider the context of the tokens in the source side and that in the target side via their relative co-occurrence frequencies. We evaluate Phrase2Set in three SE applications: 1) tagging the fragments of texts in a tutorial with the relevant API elements, 2) tagging the StackOverflow entries with relevant API elements, 3) text-to-API translation. Our empirical results show that Phrase2Set achieves high accuracy and outperforms the state-of-the-art models in all three applications. We also provide the lessons learned and other potential applications.","1534-5351","978-1-6654-3786-8","10.1109/SANER53432.2022.00068","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9825887","Machine Translation;Phrase-to-Set Translation;Software Tagging;Text-to-Code;Code-to-Text Translation","Codes;Computational modeling;Tutorials;Transforms;Tagging;Software;Bayes methods","","","","59","IEEE","21 Jul 2022","","","IEEE","IEEE Conferences"
"Exploiting Crowd-based Learning Method in Software Engineering Course","X. Mao; Y. Lu; Y. Yang","Key Lab. of Software Engineering for Complex Systems, National University of Defense Technology, Changsha, China; College of Computer, National University of Defense Technology, Changsha, China; College of Computer, National University of Defense Technology, Changsha, China",2020 15th International Conference on Computer Science & Education (ICCSE),"22 Sep 2020","2020","","","39","44","Software engineering is one of main major course for computer science. The main objective of this course is to improve the engineering capabilities of students to develop complex software systems. However, current course practice methods are teacher-centered and thus highly depend on the limited talents, experiences and efforts of teachers. Such methods greatly restrict students’ scopes to gain necessary skills and artifacts, and to draw on successful experiences to address various personalized engineering issues and therefore enhance abilities to tackle engineering complexity. This paper presents a crowd-based learning method and introduces our exploration to use the method to reform the software engineering course practice. The essence of our exploration is to exploit the wisdoms and artifacts of crowds over Internet to support students to accomplish their course projects. The former is the engineering knowledges shared in question and answering (Q&A) platforms such as StackOverflow, and the latter is the open source software (OSS) hosted in OSS sites such as GitHub. We use the method in two separate course practices that aim to improve students’ abilities to develop original, high-quality and large-scale software systems. The results of three-year explorations are positive and impressive and show that the crowd-based learning method is effective.","2473-9464","978-1-7281-7267-5","10.1109/ICCSE49874.2020.9201647","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9201647","crowd-based learning method;course practice;open source software;open source community","Education;Software engineering;Learning systems;Crowdsourcing;Software systems","","","","16","IEEE","22 Sep 2020","","","IEEE","IEEE Conferences"
"Understanding Regular Expression Denial of Service (ReDoS): Insights from LLM-Generated Regexes and Developer Forums","M. L. Siddiq; J. Zhang; J. C. S. Santos","University of Notre Dame, Notre Dame, IN, USA; University of Notre Dame, Notre Dame, IN, USA; University of Notre Dame, Notre Dame, IN, USA",2024 IEEE/ACM 32nd International Conference on Program Comprehension (ICPC),"18 Jun 2024","2024","","","190","201","Regular expression Denial of Service (ReDoS) represents an algorithmic complexity attack that exploits the processing of regular expressions (regexes) to produce a denial-of-service attack. This attack occurs when a regex’s evaluation time scales polynomially or exponentially with input length, posing significant challenges for software developers. The advent of Large Language Models (LLMs) has revolutionized the generation of regexes from natural language prompts, but not without its risks. Prior works showed that LLMs can generate code with vulnerabilities and security smells. In this paper, we examined the correctness and security of regexes generated by LLMs as well as the characteristics of LLM-generated vulnerable regexes. Our study also examined ReDoS patterns in actual software projects, aligning them with corresponding regex equivalence classes and algorithmic complexity. Moreover, we analyzed developer discussions on GitHub and StackOverflow, constructing a taxonomy to investigate their experiences and perspectives on ReDoS. In this study, we found that GPT-3.5 was the best LLM to generate regexes that are both correct and secure. We also observed that LLM-generated regexes mainly have polynomial ReDoS vulnerability patterns, and it is consistent with vulnerable regexes found in open source projects. We also found that developers’ main discussions around insecure regexes is related to mitigation strategies to remove vulnerable regexes. CCS CONCEPTS • Software and its engineering$\rightarrow$ State based definitions; • Security and privacy $\rightarrow$ Denial-of-service attacks; • Computing methodologies $\rightarrow$ Multi-task learning.","2643-7171","979-8-4007-0586-1","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10556479","ReDoS;DoS Attack;large language models;regex generation","Privacy;Taxonomy;Software algorithms;Natural languages;Denial-of-service attack;Software;Polynomials","","","","72","","18 Jun 2024","","","IEEE","IEEE Conferences"
"Hypergraph Neural Network Hawkes Process","Z. -H. Cheng; J. -W. Liu; Z. Cao","Department of Automation, College of Information Science and Engineering, China University of Petroleum Beijing, Beijing, China; Department of Automation, College of Information Science and Engineering, China University of Petroleum Beijing, Beijing, China; Department of Automation, College of Information Science and Engineering, China University of Petroleum Beijing, Beijing, China",2022 International Joint Conference on Neural Networks (IJCNN),"30 Sep 2022","2022","","","1","6","In real-world application, the temporal asynchronous event sequences are ubiquitous, such as social network, financial engineering, and medical diagonostics, and so on. These data usually show certain intrinsic high-order dependency characteristics. To this end, we propose a hypergraph neural network Hawkes process (HGHP) model, which can extract the high-order correlation from the data through the hypergraph neural network and encode dependent relationships into the hypergraph structure. When processing event sequence data, this method obtains the correlation matrix between different events through hyperedge convolution, and then obtains the latent representation for the event sequence based on the correlation between the data. We conduct experiments on multiple public datasets. Our proposed HGHP model achieves 86.6% accuracy on MIMIC-II dataset, 62.42% on Financial dataset, and 46.79% on Stackoverflow, which is outperforming existing baseline models.","2161-4407","978-1-7281-8671-9","10.1109/IJCNN55064.2022.9892328","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9892328","hypergraph;Hawkes Process;encoder;sequence data","Correlation;Social networking (online);Convolution;Neural networks;MIMICs;Feature extraction;Data models","","","","22","IEEE","30 Sep 2022","","","IEEE","IEEE Conferences"
"""Learning Relevance"" as a Service for Improving Search Results in Technical Discussion Forums","S. Atreja; S. Agarwal; G. B. Dasgupta; D. A. Perpetua","IBM Research, India; IBM Research, India; IBM Research, India; IBM, USA",2017 IEEE International Conference on Web Services (ICWS),"11 Sep 2017","2017","","","684","691","Search results in technical forums are typically keyword based. The relevance of a link is usually gauged by closest content match. However, it has been shown in literature that users' click behavior is an integral part of deciding the relevance of a search result. Moreover, it is not just the number of clicks that matter, but time spent on a clicked link, order in which the links were clicked etc. also play an important role in the relevance decision. In this paper, we have developed a service that analyzes the click logs of searches performed in the technical forums and learns the new relevance scores for the search results with respect to a query. The computation model for relevance is an optimization problem, the constraints for which have been designed based on real user behavior study. We ingested StackOverflow data for few domains and designed a QA style search to carry out the study. We have developed heuristics to solve the optimization problem and have validated the relevance model using user behavior simulations. The relevance model is shown to yield efficient, robust and effective rank order using DCG (discounted cumulative gains) and stability metrics.","","978-1-5386-0752-7","10.1109/ICWS.2017.82","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8029823","","Web search;Computational modeling;Optimization;Data models;Java;Training;Correlation","","","1","14","IEEE","11 Sep 2017","","","IEEE","IEEE Conferences"
"Software Documentation Issues Unveiled","E. Aghajani; C. Nagy; O. L. Vega-Márquez; M. Linares-Vásquez; L. Moreno; G. Bavota; M. Lanza","Software Institute, Università della Svizzera italiana (USI), Switzerland; Software Institute, Università della Svizzera italiana (USI), Switzerland; Systems and Computing Engineering Department, Universidad de los Andes, Colombia; Systems and Computing Engineering Department, Universidad de los Andes, Colombia; Department of Computer Science, Colorado State University, USA; Software Institute, Università della Svizzera italiana (USI), Switzerland; Software Institute, Università della Svizzera italiana (USI), Switzerland",2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE),"26 Aug 2019","2019","","","1199","1210","(Good) Software documentation provides developers and users with a description of what a software system does, how it operates, and how it should be used. For example, technical documentation (e.g., an API reference guide) aids developers during evolution/maintenance activities, while a user manual explains how users are to interact with a system. Despite its intrinsic value, the creation and the maintenance of documentation is often neglected, negatively impacting its quality and usefulness, ultimately leading to a generally unfavourable take on documentation. Previous studies investigating documentation issues have been based on surveying developers, which naturally leads to a somewhat biased view of problems affecting documentation. We present a large scale empirical study, where we mined, analyzed, and categorized 878 documentation-related artifacts stemming from four different sources, namely mailing lists, Stack Overflow discussions, issue repositories, and pull requests. The result is a detailed taxonomy of documentation issues from which we infer a series of actionable proposals both for researchers and practitioners.","1558-1225","978-1-7281-0869-8","10.1109/ICSE.2019.00122","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8811931","Documentation, Empirical Study","Documentation;Software;Tools;Maintenance engineering;Taxonomy;Interviews;Information services","","100","","127","IEEE","26 Aug 2019","","","IEEE","IEEE Conferences"
"Taxonomy of Real Faults in Deep Learning Systems","N. Humbatova; G. Jahangirova; G. Bavota; V. Riccio; A. Stocco; P. Tonella","Università della Svizzera italiana, Lugano, Switzerland; Università della Svizzera italiana, Lugano, Switzerland; Università della Svizzera italiana, Lugano, Switzerland; Università della Svizzera italiana, Lugano, Switzerland; Università della Svizzera italiana, Lugano, Switzerland; Università della Svizzera italiana, Lugano, Switzerland",2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE),"21 Dec 2020","2020","","","1110","1121","The growing application of deep neural networks in safety-critical domains makes the analysis of faults that occur in such systems of enormous importance. In this paper we introduce a large taxonomy of faults in deep learning (DL) systems. We have manually analysed 1059 artefacts gathered from GitHub commits and issues of projects that use the most popular DL frameworks (TensorFlow, Keras and PyTorch) and from related Stack Overflow posts. Structured interviews with 20 researchers and practitioners describing the problems they have encountered in their experience have enriched our taxonomy with a variety of additional faults that did not emerge from the other two sources. Our final taxonomy was validated with a survey involving an additional set of 21 developers, confirming that almost all fault categories (13/15) were experienced by at least 50% of the survey participants.","1558-1225","978-1-4503-7121-6","10.1145/3377811.3380395","Swiss National Science foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284134","deep learning;real faults;software testing;taxonomy","Deep learning;System testing;Taxonomy;Neural networks;Interviews;Software development management;Software engineering","","85","","30","","21 Dec 2020","","","IEEE","IEEE Conferences"
"An Empirical Study of Common Challenges in Developing Deep Learning Applications","T. Zhang; C. Gao; L. Ma; M. Lyu; M. Kim","University of California, Los Angeles; The Chinese University of Hong Kong; Kyushu University; Chinese University of Hong Kong, Hong Kong, China; University of California, Los Angeles",2019 IEEE 30th International Symposium on Software Reliability Engineering (ISSRE),"10 Feb 2020","2019","","","104","115","Recent advances in deep learning promote the innovation of many intelligent systems and applications such as autonomous driving and image recognition. Despite enormous efforts and investments in this field, a fundamental question remains under-investigated - what challenges do developers commonly face when building deep learning applications? To seek an answer, this paper presents a large-scale empirical study of deep learning questions in a popular Q&A website, Stack Overflow. We manually inspect a sample of 715 questions and identify seven kinds of frequently asked questions. We further build a classification model to quantify the distribution of different kinds of deep learning questions in the entire set of 39,628 deep learning questions. We find that program crashes, model migration, and implementation questions are the top three most frequently asked questions. After carefully examining accepted answers of these questions, we summarize five main root causes that may deserve attention from the research community, including API misuse, incorrect hyperparameter selection, GPU computation, static graph computation, and limited debugging and profiling support. Our results highlight the need for new techniques such as cross-framework differential testing to improve software development productivity and software reliability in deep learning.","2332-6549","978-1-7281-4982-0","10.1109/ISSRE.2019.00020","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8987482","deep learning, Stack Overflow, programming issues, software reliability","","","82","","50","IEEE","10 Feb 2020","","","IEEE","IEEE Conferences"
"Choosing your weapons: On sentiment analysis tools for software engineering research","R. Jongeling; S. Datta; A. Serebrenik","Eindhoven University of Technology Singapore, The Netherlands; University of Technology and Design, Singapore; Eindhoven University of Technology, The Netherlands",2015 IEEE International Conference on Software Maintenance and Evolution (ICSME),"23 Nov 2015","2015","","","531","535","Recent years have seen an increasing attention to social aspects of software engineering, including studies of emotions and sentiments experienced and expressed by the software developers. Most of these studies reuse existing sentiment analysis tools such as SentiStrength and NLTK. However, these tools have been trained on product reviews and movie reviews and, therefore, their results might not be applicable in the software engineering domain. In this paper we study whether the sentiment analysis tools agree with the sentiment recognized by human evaluators (as reported in an earlier study) as well as with each other. Furthermore, we evaluate the impact of the choice of a sentiment analysis tool on software engineering studies by conducting a simple study of differences in issue resolution times for positive, negative and neutral texts. We repeat the study for seven datasets (issue trackers and Stack Overflow questions) and different sentiment analysis tools and observe that the disagreement between the tools can lead to contradictory conclusions.","","978-1-4673-7532-0","10.1109/ICSM.2015.7332508","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7332508","","Sentiment analysis;Software engineering;Manuals;Labeling;Software;Androids;Humanoid robots","","72","","32","IEEE","23 Nov 2015","","","IEEE","IEEE Conferences"
"Sentiment Analysis for Software Engineering: How Far Can Pre-trained Transformer Models Go?","T. Zhang; B. Xu; F. Thung; S. A. Haryono; D. Lo; L. Jiang","School of Information Systems, Singapore Management University; School of Information Systems, Singapore Management University; School of Information Systems, Singapore Management University; School of Information Systems, Singapore Management University; School of Information Systems, Singapore Management University; School of Information Systems, Singapore Management University",2020 IEEE International Conference on Software Maintenance and Evolution (ICSME),"2 Nov 2020","2020","","","70","80","Extensive research has been conducted on sentiment analysis for software engineering (SA4SE). Researchers have invested much effort in developing customized tools (e.g., SentiStrength-SE, SentiCR) to classify the sentiment polarity for Software Engineering (SE) specific contents (e.g., discussions in Stack Overflow and code review comments). Even so, there is still much room for improvement. Recently, pre-trained Transformer-based models (e.g., BERT, XLNet) have brought considerable breakthroughs in the field of natural language processing (NLP). In this work, we conducted a systematic evaluation of five existing SA4SE tools and variants of four state-of-the-art pre-trained Transformer-based models on six SE datasets. Our work is the first to fine-tune pre-trained Transformer-based models for the SA4SE task. Empirically, across all six datasets, our fine-tuned pre-trained Transformer-based models outperform the existing SA4SE tools by 6.5-35.6% in terms of macro/micro-averaged F1 scores.","2576-3148","978-1-7281-5619-4","10.1109/ICSME46990.2020.00017","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9240704","Sentiment Analysis;Software Mining;Natural Language Processing;Pre-trained Models","Sentiment analysis;Analytical models;Software maintenance;Systematics;Tools;Task analysis;Software engineering","","66","","44","IEEE","2 Nov 2020","","","IEEE","IEEE Conferences"
"Improving API Caveats Accessibility by Mining API Caveats Knowledge Graph","H. Li; S. Li; J. Sun; Z. Xing; X. Peng; M. Liu; X. Zhao","School of Computer and Information Engineering, Jiangxi Normal University, Nanchang, China; CECS, Australian National University, Canberra, Australia; CECS, Australian National University, Canberra, Australia; CECS, Australian National University, Canberra, Australia; School of Computer Science, Fudan University, Shanghai, China; School of Computer Science, Fudan University, Shanghai, China; School of Computer Engineering, Nanyang Technological University, Singapore, Singapore",2018 IEEE International Conference on Software Maintenance and Evolution (ICSME),"11 Nov 2018","2018","","","183","193","API documentation provides important knowledge about the functionality and usage of APIs. In this paper, we focus on API caveats that developers should be aware of in order to avoid unintended use of an API. Our formative study of Stack Overflow questions suggests that API caveats are often scattered in multiple API documents, and are buried in lengthy textual descriptions. These characteristics make the API caveats less discoverable. When developers fail to notice API caveats, it is very likely to cause some unexpected programming errors. In this paper, we propose natural language processing(NLP) techniques to extract ten subcategories of API caveat sentences from API documentation and link these sentences to API entities in an API caveats knowledge graph. The API caveats knowledge graph can support information retrieval based or entity-centric search of API caveats. As a proof-of-concept, we construct an API caveats knowledge graph for Android APIs from the API documentation on the Android Developers website. We study the abundance of different subcategories of API caveats and use a sampling method to manually evaluate the quality of the API caveats knowledge graph. We also conduct a user study to validate whether and how the API caveats knowledge graph may improve the accessibility of API caveats in API documentation.","2576-3148","978-1-5386-7870-1","10.1109/ICSME.2018.00028","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8530028","API caveats, Knowledge Graph, Coreference Resolution, Entity Linking","Documentation;Programming;Knowledge engineering;Java;Taxonomy","","65","","46","IEEE","11 Nov 2018","","","IEEE","IEEE Conferences"
"Software-Specific Named Entity Recognition in Software Engineering Social Content","D. Ye; Z. Xing; C. Y. Foo; Z. Q. Ang; J. Li; N. Kapre","School of Computer Engineering, Nanyang Technological University, Singapore; School of Computer Engineering, Nanyang Technological University, Singapore; School of Computer Engineering, Nanyang Technological University, Singapore; School of Computer Engineering, Nanyang Technological University, Singapore; School of Computer Engineering, Nanyang Technological University, Singapore; School of Computer Engineering, Nanyang Technological University, Singapore","2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)","23 May 2016","2016","1","","90","101","Software engineering social content, such as Q&A discussions on Stack Overflow, has become a wealth of information on software engineering. This textual content is centered around software-specific entities, and their usage patterns, issues-solutions, and alternatives. However, existing approaches to analyzing software engineering texts treat software-specific entities in the same way as other content, and thus cannot support the recent advance of entity-centric applications, such as direct answers and knowledge graph. The first step towards enabling these entity-centric applications for software engineering is to recognize and classify software-specific entities, which is referred to as Named Entity Recognition (NER) in the literature. Existing NER methods are designed for recognizing person, location and organization in formal and social texts, which are not applicable to NER in software engineering. Existing information extraction methods for software engineering are limited to API identification and linking of a particular programming language. In this paper, we formulate the research problem of NER in software engineering. We identify the challenges in designing a software-specific NER system and propose a machine learning based approach applied on software engineering social content. Our NER system, called S-NER, is general for software engineering in that it can recognize a broad category of software entities for a wide range of popular programming languages, platform, and library. We conduct systematic experiments to evaluate our machine learning based S-NER against a well-designed, and to study the effectiveness of widely-adopted NER techniques and features in the face of the unique characteristics of software engineering social content.","","978-1-5090-1855-0","10.1109/SANER.2016.10","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7476633","Mining software repositories;named entity recognition","Software engineering;Software;Computer languages;Libraries;Software standards;Organizations;Androids","","64","","48","IEEE","23 May 2016","","","IEEE","IEEE Conferences"
"Choosing an NLP Library for Analyzing Software Documentation: A Systematic Literature Review and a Series of Experiments","F. N. A. Al Omran; C. Treude","School of Computer Science, University of Adelaide, Adelaide, South Australia; School of Computer Science, University of Adelaide, Adelaide, South Australia",2017 IEEE/ACM 14th International Conference on Mining Software Repositories (MSR),"3 Jul 2017","2017","","","187","197","To uncover interesting and actionable information from natural language documents authored by software developers, many researchers rely on ""out-of-the-box"" NLP libraries. However, software artifacts written in natural language are different from other textual documents due to the technical language used. In this paper, we first analyze the state of the art through a systematic literature review in which we find that only a small minority of papers justify their choice of an NLP library. We then report on a series of experiments in which we applied four state-of-the-art NLP libraries to publicly available software artifacts from three different sources. Our results show low agreement between different libraries (only between 60% and 71% of tokens were assigned the same part-of-speech tag by all four libraries) as well as differences in accuracy depending on source: For example, spaCy achieved the best accuracy on Stack Overflow data with nearly 90% of tokens tagged correctly, while it was clearly outperformed by Google's SyntaxNet when parsing GitHub ReadMe files. Our work implies that researchers should make an informed decision about the particular NLP library they choose and that customizations to libraries might be necessary to achieve good results when analyzing software artifacts written in natural language.","","978-1-5386-1544-7","10.1109/MSR.2017.42","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7962368","Natural language processing;NLP libraries;Part-of-Speech tagging;Software documentation","Libraries;Natural language processing;Software;Tools;Bibliographies;Software engineering","","52","","27","IEEE","3 Jul 2017","","","IEEE","IEEE Conferences"
"Automatic summarization of API reviews","G. Uddin; F. Khomh","School of Computer Science, McGill University, Montreal, QC, Canada; SWAT Lab, Polytechnique Montreal, QC, Canada",2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE),"23 Nov 2017","2017","","","159","170","With the proliferation of online developer forums as informal documentation, developers often share their opinions about the APIs they use. However, given the plethora of opinions available for an API in various online developer forums, it can be challenging for a developer to make informed decisions about the APIs. While automatic summarization of opinions have been explored for other domains (e.g., cameras, cars), we found little research that investigates the benefits of summaries of public API reviews. In this paper, we present two algorithms (statistical and aspect-based) to summarize opinions about APIs. To investigate the usefulness of the techniques, we developed, Opiner, an online opinion summarization engine that presents summaries of opinions using both our proposed techniques and existing six off-the-shelf techniques. We investigated the usefulness of Opiner using two case studies, both involving professional software engineers. We found that developers were interested to use our proposed summaries much more frequently than other summaries (daily vs once a year) and that while combined with Stack Overflow, Opiner helped developers to make the right decision with more accuracy and confidence and in less time.","","978-1-5386-2684-9","10.1109/ASE.2017.8115629","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8115629","Opinion mining;API informal documentation;opinion summaries;study;summary quality","Java;Message systems;Software;Heuristic algorithms;Cameras;Engines","","46","","64","IEEE","23 Nov 2017","","","IEEE","IEEE Conferences"
"Assessing Generalizability of CodeBERT","X. Zhou; D. Han; D. Lo","School of Computing and Information Systems, Singapore Management University; School of Computing and Information Systems, Singapore Management University; School of Computing and Information Systems, Singapore Management University",2021 IEEE International Conference on Software Maintenance and Evolution (ICSME),"24 Nov 2021","2021","","","425","436","Pre-trained models like BERT have achieved strong improvements on many natural language processing (NLP) tasks, showing their great generalizability. The success of pre-trained models in NLP inspires pre-trained models for programming language. Recently, CodeBERT, a model for both natural language (NL) and programming language (PL), pre-trained on code search dataset, is proposed. Although promising, CodeBERT has not been evaluated beyond its pre-trained dataset for NL-PL tasks. Also, it has only been shown effective on two tasks that are close in nature to its pre-trained data. This raises two questions: Can CodeBERT generalize beyond its pre-trained data? Can it generalize to various software engineering tasks involving NL and PL? Our work answers these questions by performing an empirical investigation into the generalizability of CodeBERT. First, we assess the generalizability of CodeBERT to datasets other than its pre-training data. Specifically, considering the code search task, we conduct experiments on another dataset containing Python code snippets and their corresponding documentation. We also consider yet another dataset of questions and answers collected from Stack Overflow about Python programming. Second, to assess the generalizability of CodeBERT to various software engineering tasks, we apply CodeBERT to the just-in-time defect prediction task. Our empirical results support the generalizability of CodeBERT on the additional data and task. CodeBERT-based solutions can achieve higher or comparable performance than specialized solutions designed for the code search and just-in-time defect prediction tasks. However, the superior performance of the CodeBERT requires a tradeoff; for example, it requires much more computation resources as compared to specialized code search approaches.","2576-3148","978-1-6654-2882-8","10.1109/ICSME52107.2021.00044","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9609166","pre-trained model;generalizability;CodeBERT","Software maintenance;Codes;Conferences;Computational modeling;Documentation;Programming;Natural language processing","","45","","65","IEEE","24 Nov 2021","","","IEEE","IEEE Conferences"
"Exploratory Study of Slack Q&A Chats as a Mining Source for Software Engineering Tools","P. Chatterjee; K. Damevski; L. Pollock; V. Augustine; N. A. Kraft","University of Delaware, Newark, DE, USA; Virginia Commonwealth University, Richmond, VA, USA; University of Delaware, Newark, DE, USA; ABB Corporate Research, Raleigh, NC, USA; ABB Corporate Research, Raleigh, NC, USA",2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR),"29 Aug 2019","2019","","","490","501","Modern software development communities are increasingly social. Popular chat platforms such as Slack host public chat communities that focus on specific development topics such as Python or Ruby-on-Rails. Conversations in these public chats often follow a Q&A format, with someone seeking information and others providing answers in chat form. In this paper, we describe an exploratory study into the potential use-fulness and challenges of mining developer Q&A conversations for supporting software maintenance and evolution tools. We designed the study to investigate the availability of information that has been successfully mined from other developer communications, particularly Stack Overflow. We also analyze characteristics of chat conversations that might inhibit accurate automated analysis. Our results indicate the prevalence of useful information, including API mentions and code snippets with descriptions, and several hurdles that need to be overcome to automate mining that information.","2574-3864","978-1-7281-3412-3","10.1109/MSR.2019.00075","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8816749","developer communications;chat communities;mining;empirical study","Data mining;Tools;Software engineering;Programming;Python;Software maintenance","","44","","60","IEEE","29 Aug 2019","","","IEEE","IEEE Conferences"
"DeepLocalize: Fault Localization for Deep Neural Networks","M. Wardat; W. Le; H. Rajan","Department of Computer Science, Iowa State University, 2434 Osborn Dr, Ames, IA, USA; Department of Computer Science, Iowa State University, 2434 Osborn Dr, Ames, IA, USA; Department of Computer Science, Iowa State University, 2434 Osborn Dr, Ames, IA, USA",2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE),"7 May 2021","2021","","","251","262","Deep Neural Networks (DNNs) are becoming an integral part of most software systems. Previous work has shown that DNNs have bugs. Unfortunately, existing debugging techniques don't support localizing DNN bugs because of the lack of understanding of model behaviors. The entire DNN model appears as a black box. To address these problems, we propose an approach and a tool that automatically determines whether the model is buggy or not, and identifies the root causes for DNN errors. Our key insight is that historic trends in values propagated between layers can be analyzed to identify faults, and also localize faults. To that end, we first enable dynamic analysis of deep learning applications: by converting it into an imperative representation and alternatively using a callback mechanism. Both mechanisms allows us to insert probes that enable dynamic analysis over the traces produced by the DNN while it is being trained on the training data. We then conduct dynamic analysis over the traces to identify the faulty layer or hyperparameter that causes the error. We propose an algorithm for identifying root causes by capturing any numerical error and monitoring the model during training and finding the relevance of every layer/parameter on the DNN outcome. We have collected a benchmark containing 40 buggy models and patches that contain real errors in deep learning applications from Stack Overflow and GitHub. Our benchmark can be used to evaluate automated debugging tools and repair techniques. We have evaluated our approach using this DNN bug-and-patch benchmark, and the results showed that our approach is much more effective than the existing debugging approach used in the state-of-the-practice Keras library. For 34/40 cases, our approach was able to detect faults whereas the best debugging approach provided by Keras detected 32/40 faults. Our approach was able to localize 21/40 bugs whereas Keras did not localize any faults.","1558-1225","978-1-6654-0296-5","10.1109/ICSE43902.2021.00034","National Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9402065","Deep Neural Networks;Fault Location;Debugging;Program Analysis;Deep learning bugs","Fault diagnosis;Computer bugs;Neural networks;Debugging;Benchmark testing;Tools;Numerical models","","43","","77","IEEE","7 May 2021","","","IEEE","IEEE Conferences"
"How Reliable is the Crowdsourced Knowledge of Security Implementation?","M. Chen; F. Fischer; N. Meng; X. Wang; J. Grossklags",Virginia Tech; Technical University of Munich; Virginia Tech; University of Texas at San Antonio; Technical University of Munich,2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE),"26 Aug 2019","2019","","","536","547","Stack Overflow (SO) is the most popular online Q&A site for developers to share their expertise in solving programming issues. Given multiple answers to a certain question, developers may take the accepted answer, the answer from a person with high reputation, or the one frequently suggested. However, researchers recently observed that SO contains exploitable security vulnerabilities in the suggested code of popular answers, which found their way into security-sensitive high-profile applications that millions of users install every day. This observation inspires us to explore the following questions: How much can we trust the security implementation suggestions on SO? If suggested answers are vulnerable, can developers rely on the community's dynamics to infer the vulnerability and identify a secure counterpart? To answer these highly important questions, we conducted a comprehensive study on security-related SO posts by contrasting secure and insecure advice with the community-given content evaluation. Thereby, we investigated whether SO's gamification approach on incentivizing users is effective in improving security properties of distributed code examples. Moreover, we traced the distribution of duplicated samples over given answers to test whether the community behavior facilitates or prevents propagation of secure and insecure code suggestions within SO. We compiled 953 different groups of similar security-related code examples and labeled their security, identifying 785 secure answer posts and 644 insecure answer posts. Compared with secure suggestions, insecure ones had higher view counts (36,508 vs. 18,713), received a higher score (14 vs. 5), and had significantly more duplicates (3.8 vs. 3.0) on average. 34% of the posts provided by highly reputable so-called trusted users were insecure. Our findings show that based on the distribution of secure and insecure code on SO, users being laymen in security rely on additional advice and guidance. However, the community-given feedback does not allow differentiating secure from insecure choices. The reputation mechanism fails in indicating trustworthy users with respect to security questions, ultimately leaving other users wandering around alone in a software security minefield.","1558-1225","978-1-7281-0869-8","10.1109/ICSE.2019.00065","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812042","Stack Overflow, crowdsourced knowledge, social dynamics, security implementation","Security;Cloning;Message systems;Reliability;Encoding;Crowdsourcing;Software","","38","","73","IEEE","26 Aug 2019","","","IEEE","IEEE Conferences"
"HDSKG: Harvesting domain specific knowledge graph from content of webpages","X. Zhao; Z. Xing; M. A. Kabir; N. Sawada; J. Li; S. -W. Lin","Rolls-Royce@NTU Corporate Lab, Nanyang Technological University (NTU), Singapore; Research School of Computer Science, Australian National University, Australia; School of Computing and Mathematics, Charles Stuart University, Bathurst, NSW, Australia; Cloud Service Division., NTT Communications Corporation, Japan; School of Computer Science and Engineering, NTU, Singapore; Rolls-Royce@NTU Corporate Lab, Nanyang Technological University (NTU), Singapore","2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER)","23 Mar 2017","2017","","","56","67","Knowledge graph is useful for many different domains like search result ranking, recommendation, exploratory search, etc. It integrates structural information of concepts across multiple information sources, and links these concepts together. The extraction of domain specific relation triples (subject, verb phrase, object) is one of the important techniques for domain specific knowledge graph construction. In this research, an automatic method named HDSKG is proposed to discover domain specific concepts and their relation triples from the content of webpages. We incorporate the dependency parser with rule-based method to chunk the relations triple candidates, then we extract advanced features of these candidate relation triples to estimate the domain relevance by a machine learning algorithm. For the evaluation of our method, we apply HDSKG to Stack Overflow (a Q&A website about computer programming). As a result, we construct a knowledge graph of software engineering domain with 35279 relation triples, 44800 concepts, and 9660 unique verb phrases. The experimental results show that both the precision and recall of HDSKG (0.78 and 0.7 respectively) is much higher than the openIE (0.11 and 0.6 respectively). The performance is particularly efficient in the case of complex sentences. Further more, with the self-training technique we used in the classifier, HDSKG can be applied to other domain easily with less training data.","","978-1-5090-5501-2","10.1109/SANER.2017.7884609","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7884609","Knowledge Graph;Structural Information Extraction;openIE;Stack Overflow;Dependency Parse","Knowledge engineering;Feature extraction;Libraries;Data mining;Software engineering;Information retrieval;Support vector machines","","35","1","59","IEEE","23 Mar 2017","","","IEEE","IEEE Conferences"
"An Empirical Study of Developer Discussions on Low-Code Software Development Challenges","M. A. Al Alamin; S. Malakar; G. Uddin; S. Afroz; T. B. Haider; A. Iqbal",University of Calgary; Bangladesh University of Engineering and Technology; University of Calgary; Bangladesh University of Engineering and Technology; Bangladesh University of Engineering and Technology; Bangladesh University of Engineering and Technology,2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR),"28 Jun 2021","2021","","","46","57","Low-code software development (LCSD) is an emerging paradigm that combines minimal source code with interactive graphical interfaces to promote rapid application development. LCSD aims to democratize application development to software practitioners with diverse backgrounds. Given that LCSD is relatively a new paradigm, it is vital to learn about the challenges developers face during their adoption of LCSD platforms. The online developer forum, Stack Overflow (SO), is popular among software developers to ask for solutions to their technical problems. We observe a growing body of posts in SO with discussions of LCSD platforms. In this paper, we present an empirical study of around 5K SO posts (questions + accepted answers) that contain discussions of nine popular LCSD platforms. We apply topic modeling on the posts to determine the types of topics discussed. We find 13 topics related to LCSD in SO. The 13 topics are grouped into four categories: Customization, Platform Adoption, Database Management, and Third-Party Integration. More than 40% of the questions are about customization, i.e., developers frequently face challenges with customizing user interfaces or services offered by LCSD platforms. The topic ""Dynamic Event Handling"" under the ""Customization"" category is the most popular (in terms of average view counts per question of the topic) as well as the most difficult. It means that developers frequently search for customization solutions such as how to attach dynamic events to a form in low-code UI, yet most (75.9%) of their questions remain without an accepted answer. We manually label 900 questions from the posts to determine the prevalence of the topics’ challenges across LCSD phases. We find that most of the questions are related to the development phase, and low-code developers also face challenges with automated testing. Our study findings offer implications for low-code practitioners, platform providers, educators, and researchers.","2574-3864","978-1-7281-8710-5","10.1109/MSR52588.2021.00018","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9463132","Low-Code;Issue;Challenge;Empirical Study","Visualization;Databases;Tutorials;Documentation;User interfaces;Software;Stakeholders","","34","","63","IEEE","28 Jun 2021","","","IEEE","IEEE Conferences"
"An Empirical Study on Deployment Faults of Deep Learning Based Mobile Applications","Z. Chen; H. Yao; Y. Lou; Y. Cao; Y. Liu; H. Wang; X. Liu","Ministry of Education, Key Lab of High Confidence Software Technologies (Peking University), Beijing, China; Ministry of Education, Key Lab of High Confidence Software Technologies (Peking University), Beijing, China; Ministry of Education, Key Lab of High Confidence Software Technologies (Peking University), Beijing, China; Ministry of Education, Key Lab of High Confidence Software Technologies (Peking University), Beijing, China; Ministry of Education, Key Lab of High Confidence Software Technologies (Peking University), Beijing, China; Beijing University of Posts and Telecommunications, Beijing, China; Ministry of Education, Key Lab of High Confidence Software Technologies (Peking University), Beijing, China",2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE),"7 May 2021","2021","","","674","685","Deep learning (DL) is moving its step into a growing number of mobile software applications. These software applications, named as DL based mobile applications (abbreviated as mobile DL apps) integrate DL models trained using large-scale data with DL programs. A DL program encodes the structure of a desirable DL model and the process by which the model is trained using training data. Due to the increasing dependency of current mobile apps on DL, software engineering (SE) for mobile DL apps has become important. However, existing efforts in SE research community mainly focus on the development of DL models and extensively analyze faults in DL programs. In contrast, faults related to the deployment of DL models on mobile devices (named as deployment faults of mobile DL apps) have not been well studied. Since mobile DL apps have been used by billions of end users daily for various purposes including for safety-critical scenarios, characterizing their deployment faults is of enormous importance. To fill in the knowledge gap, this paper presents the first comprehensive study to date on the deployment faults of mobile DL apps. We identify 304 real deployment faults from Stack Overflow and GitHub, two commonly used data sources for studying software faults. Based on the identified faults, we construct a fine-granularity taxonomy consisting of 23 categories regarding to fault symptoms and distill common fix strategies for different fault symptoms. Furthermore, we suggest actionable implications and research avenues that can potentially facilitate the deployment of DL models on mobile devices.","1558-1225","978-1-6654-0296-5","10.1109/ICSE43902.2021.00068","National Key Research and Development Program of China; National Natural Science Foundation of China; National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9401981","deep learning;mobile applications;deployment faults","Taxonomy;Software;Mobile handsets;Data models;Mobile applications;Software engineering;Software development management","","34","","54","IEEE","7 May 2021","","","IEEE","IEEE Conferences"
"Architecture Patterns, Quality Attributes, and Design Contexts: How Developers Design with Them","T. Bi; P. Liang; A. Tang","School of Computer Science, Wuhan University, Wuhan, China; School of Computer Science, Wuhan University, Wuhan, China; Faculty of Science, Engineering and Technology, Swinburne University of Technology, Melbourne, Australia",2018 25th Asia-Pacific Software Engineering Conference (APSEC),"23 May 2019","2018","","","49","58","The use of architecture and design patterns have impacts on the quality attributes of a system, and the application of patterns depend on design contexts. There are complex interdependent relationships between them. In this study, we explore how developers use architecture and design patterns with respect to quality attributes concerns and design contexts. We extracted pattern related posts from Stack Overflow and analyzed the architecture discussions. Our study reveals what contexts and quality attributes developers consider when using architecture patterns, and we have identified new and previously unknown relationships between these design elements. These findings can enhance developers' knowledge when they design with architecture patterns, quality attributes, and design contexts.","2640-0715","978-1-7281-1970-0","10.1109/APSEC.2018.00019","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8719565","Architecture Pattern;Design Context;Quality Attribute;Empirical Study","Computer architecture;Ontologies;Context modeling;Decision making;Systematics;Data collection;Standards","","20","","30","IEEE","23 May 2019","","","IEEE","IEEE Conferences"
"Characterization and Prediction of Popular Projects on GitHub","J. Han; S. Deng; X. Xia; D. Wang; J. Yin","Zhejiang University, Hangzhou, China; Zhejiang University, Hangzhou, China; Monash University, Australia; Hangzhou Dianzi University, Hangzhou, China; Zhejiang University, Hangzhou, China",2019 IEEE 43rd Annual Computer Software and Applications Conference (COMPSAC),"9 Jul 2019","2019","1","","21","26","GitHub is a large and popular open source project platform, which hosts various open source projects. Despite the prevalence of GitHub platform, not every project has gained high popularity. Identification of popular projects on GitHub can help developers choose proper projects to follow or contribute to, as well as provide guidance in building a popular project. In this paper, we propose an approach to predict the popularity of GitHub projects. We first conducted online surveys with GitHub users to determine the threshold (the number of stars of a project) of popular and unpopular projects. Next, we extract 35 features from both GitHub and Stack Overflow, which are divided into three dimensions: project, evolutionary, and project owner. A random forest classifier is built based on these features to identify popular GitHub projects. To evaluate the performance of our approach, we collect a large-scale dataset from GitHub which contains a total of 409,784 GitHub projects and 174,784 GitHub users. Our model achieves an average AUC of 0.76, which statistically significantly improves state-of-the-art by a substantial margin. We also study which features are of the most importance in distinguishing popular projects from unpopular ones. Experimental results show that number of branches, number of open issues, and number of contributors play the most important roles in identification of popular projects, and all of them have large effect size.","0730-3157","978-1-7281-2607-4","10.1109/COMPSAC.2019.00013","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8754436","Feature Engineering;GitHub Project;Popularity;Prediction Model","Feature extraction;Computer languages;Information services;Electronic publishing;Internet;Software","","18","","23","IEEE","9 Jul 2019","","","IEEE","IEEE Conferences"
"Crowdsourced bug triaging","A. Sajedi Badashian; A. Hindle; E. Stroulia","Department of Computing Science, University of Alberta, Edmonton, Canada; Department of Computing Science, University of Alberta, Edmonton, Canada; Department of Computing Science, University of Alberta, Edmonton, Canada",2015 IEEE International Conference on Software Maintenance and Evolution (ICSME),"23 Nov 2015","2015","","","506","510","Bug triaging and assignment is a time-consuming task in big projects. Most research in this area examines the developers' prior development and bug-fixing activities in order to recognize their areas of expertise and assign to them relevant bug fixes. We propose a novel method that exploits a new source of evidence for the developers' expertise, namely their contributions to Q&A platforms such as Stack Overflow. We evaluated this method in the context of the 20 largest GitHub projects, considering 7144 bug reports. Our results demonstrate that our method exhibits superior accuracy to other state-of-the-art methods, and that future bug-assignment algorithms should consider exploring other sources of expertise, beyond the project's version-control system and bug tracker.","","978-1-4673-7532-0","10.1109/ICSM.2015.7332503","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7332503","","Accuracy;Java;Measurement;Computer bugs;Mathematical model;Support vector machines;Electronic mail","","17","","26","IEEE","23 Nov 2015","","","IEEE","IEEE Conferences"
"The Impact of Equivalent, Redundant and Quasi Mutants on Database Schema Mutation Analysis","C. J. Wright; G. M. Kapfhammer; P. McMinn",Dept. of Computer Science University of Sheffield; Dept. of Computer Science Allegheny College; Dept. of Computer Science University of Sheffield,2014 14th International Conference on Quality Software,"20 Nov 2014","2014","","","57","66","Since the relational database is an important component of real-world software and the schema plays a major role in ensuring the quality of the database, relational schema testing is essential. This paper presents methods for improving both the efficiency and accuracy of mutation analysis, an established method for assessing the quality of test cases for database schemas. Using a DBMS-independent abstract representation, the presented techniques automatically identify and remove mutants that are either equivalent to the original schema, redundant with respect to other mutants, or undesirable because they are only valid for certain database systems. Applying our techniques for ineffective mutant removal to a variety of schemas, many of which are from real-world sources like the U.S. Department of Agriculture and the Stack Overflow website, reveals that the presented static analysis of the DBMS-independent representation is multiple orders of magnitude faster than a DBMS-specific method. The results also show increased mutation scores in 75% of cases, with 44% of those uncovering a mutation-adequate test suite. Combining the presented techniques yields mean efficiency improvements of up to 33.7%, with averages across schemas of 1.6% and 11.8% for HyperSQL and PostgreSQL, respectively.","2332-662X","978-1-4799-7198-5","10.1109/QSIC.2014.26","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6958387","relational databases;mutation analysis","Abstracts;Relational databases;Testing;Syntactics;Accuracy;Software","","16","","26","IEEE","20 Nov 2014","","","IEEE","IEEE Conferences"
"On the Adoption of Kotlin on Android Development: A Triangulation Study","V. Oliveira; L. Teixeira; F. Ebert","Informatics Center - UFPE, Tempest Security Intelligence, Recife, Brazil; Informatics Center, Federal University of Pernambuco, Recife, Brazil; Informatics Center, Federal University of Pernambuco, Recife, Brazil","2020 IEEE 27th International Conference on Software Analysis, Evolution and Reengineering (SANER)","2 Apr 2020","2020","","","206","216","In 2017, Google announced Kotlin as one of the officially supported languages for Android development. Among the reasons for choosing Kotlin, Google mentioned it is “concise, expressive, and designed to be type and null-safe”. Another important reason is that Kotlin is a language fully interoperable with Java and runs on the JVM. Despite Kotlin's rapid rise in the industry, very little has been done in academia to understand how developers are dealing with the adoption of Kotlin. The goal of this study is to understand how developers are dealing with the recent adoption of Kotlin as an official language for Android development, their perception about the advantages and disadvantages related to its usage, and the most common problems faced by them. This research was conducted using the concurrent triangulation strategy, which is a mixed-method approach. We performed a thorough analysis of 9,405 questions related to Kotlin development for the Android platform on Stack Overflow. Concurrently, we also conducted a basic qualitative research interviewing seven Android developers that use Kotlin to confirm and cross-validate our findings. Our study reveals that developers do seem to find the language easy to understand and to adopt it. This perception begins to change when the functional paradigm becomes more evident. Accordingly to the developers, the readability and legibility are compromised if developers overuse the functional flexibility that the language provides. The developers also consider that Kotlin increases the quality of the produced code mainly due to its null-safety guarantees, but it can also become a challenge when interoperating with Java, despite the interoperability being considered as an advantage. While adopting Kotlin requires some care from developers, its benefits seem to bring many advantages to the platform according to the developers, especially in the aspect of adopting a more modern language while maintaining the consolidated Java-based development environment.","1534-5351","978-1-7281-5143-4","10.1109/SANER48275.2020.9054859","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9054859","Android;Kotlin;Java","Productivity;Industries;Java;Codes;Virtual machining;Software;Internet","","15","","51","IEEE","2 Apr 2020","","","IEEE","IEEE Conferences"
"CLEAR: Contrastive Learning for API Recommendation","M. Wei; N. S. Harzevili; Y. Huang; J. Wang; S. Wang","York University, Toronto, Canada; York University, Toronto, Canada; Institute of Software Chinese Academy of Sciences; Institute of Software Chinese Academy of Sciences; York University, Toronto, Canada",2022 IEEE/ACM 44th International Conference on Software Engineering (ICSE),"20 Jun 2022","2022","","","376","387","Automatic API recommendation has been studied for years. There are two orthogonal lines of approaches for this task, i.e., information-retrieval-based (IR-based) and neural-based methods. Although these approaches were reported having remarkable performance, our observation shows that existing approaches can fail due to the following two reasons: 1) most IR-based approaches treat task queries as bag-of-words and use word embedding to represent queries, which cannot capture the sequential semantic information. 2) both the IR-based and the neural-based approaches are weak at distinguishing the semantic difference among lexically similar queries. In this paper, we propose CLEAR, which leverages BERT sen-tence embedding and contrastive learning to tackle the above two is-sues. Specifically, CLEAR embeds the whole sentence of queries and Stack Overflow (SO) posts with a BERT-based model rather than the bag-of-word-based word embedding model, which can preserve the semantic-related sequential information. In addition, CLEAR uses contrastive learning to train the BERT-based embedding model for learning precise semantic representation of programming termi-nologies regardless of their lexical information. CLEAR also builds a BERT-based re-ranking model to optimize its recommendation results. Given a query, CLEAR first selects a set of candidate SO posts via the BERT sentence embedding-based similarity to reduce search space. CLEAR further leverages a BERT-based re-ranking model to rank candidate SO posts and recommends the APIs from the ranked top SO posts for the query. Our experiment results on three different test datasets confirm the effectiveness of CLEAR for both method-level and class-level API recommendation. Compared to the state-of-the-art API recom-mendation approaches, CLEAR improves the MAP by 25%-187% at method-level and 10%-100% at class-level.","1558-1225","978-1-4503-9221-1","10.1145/3510003.3510159","Natural Sciences and Engineering Research Council of Canada; National Natural Science Foundation of China(grant numbers:62072442); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9793955","API recommendation;contrastive learning;semantic difference","Training;Codes;Linux;Semantics;Bit error rate;Programming;Task analysis","","15","","53","","20 Jun 2022","","","IEEE","IEEE Conferences"
"DeepDiagnosis: Automatically Diagnosing Faults and Recommending Actionable Fixes in Deep Learning Programs","M. Wardat; B. D. Cruz; W. Le; H. Rajan","Dept. of Computer Science, Iowa State University, Ames, IA, USA; Dept. of Computer Science, Iowa State University, Ames, IA, USA; Dept. of Computer Science, Iowa State University, Ames, IA, USA; Dept. of Computer Science, Iowa State University, Ames, IA, USA",2022 IEEE/ACM 44th International Conference on Software Engineering (ICSE),"20 Jun 2022","2022","","","561","572","Deep Neural Networks (DNNs) are used in a wide variety of applications. However, as in any software application, DNN-based apps are afflicted with bugs. Previous work observed that DNN bug fix patterns are different from traditional bug fix patterns. Furthermore, those buggy models are non-trivial to diagnose and fix due to inexplicit errors with several options to fix them. To support developers in locating and fixing bugs, we propose DeepDiagnosis, a novel debugging approach that localizes the faults, reports error symptoms and suggests fixes for DNN programs. In the first phase, our technique monitors a training model, periodically checking for eight types of error conditions. Then, in case of problems, it reports messages containing sufficient information to perform actionable repairs to the model. In the evaluation, we thoroughly examine 444 models - 53 real-world from GitHub and Stack Overflow, and 391 curated by AUTOTRAINER. DeepDiagnosis provides superior accuracy when compared to UMLUAT and DeepLocalize. Our technique is faster than AUTOTRAINER for fault localization. The results show that our approach can support additional types of models, while state-of-the-art was only able to handle classification ones. Our technique was able to report bugs that do not manifest as numerical errors during training. Also, it can provide actionable insights for fix whereas DeepLocalize can only report faults that lead to numerical errors during training. DeepDiagnosis manifests the best capabilities of fault detection, bug localization, and symptoms identification when compared to other approaches.","1558-1225","978-1-4503-9221-1","10.1145/3510003.3510071","National Science Foundation(grant numbers:CNS-21-20448,CCF-19-34884); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9794035","deep neural networks;fault location;debugging;program analysis;deep learning bugs","Training;Location awareness;Deep learning;Computer bugs;Neural networks;Software;Numerical models","","12","","49","CCBY","20 Jun 2022","","","IEEE","IEEE Conferences"
"Repairing Deep Neural Networks: Fix Patterns and Challenges","M. J. Islam; R. Pan; G. Nguyen; H. Rajan","Dept. of Computer Science, Iowa State University, Ames, IA, USA; Dept. of Computer Science, Iowa State University, Ames, IA, USA; Dept. of Computer Science, Iowa State University, Ames, IA, USA; Dept. of Computer Science, Iowa State University, Ames, IA, USA",2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE),"21 Dec 2020","2020","","","1135","1146","Significant interest in applying Deep Neural Network (DNN) has fueled the need to support engineering of software that uses DNNs. Repairing software that uses DNNs is one such unmistakable SE need where automated tools could be beneficial; however, we do not fully understand challenges to repairing and patterns that are utilized when manually repairing DNNs. What challenges should automated repair tools address? What are the repair patterns whose automation could help developers? Which repair patterns should be assigned a higher priority for building automated bug repair tools? This work presents a comprehensive study of bug fix patterns to address these questions. We have studied 415 repairs from Stack Overflow and 555 repairs from GitHub for five popular deep learning libraries Caffe, Keras, Tensorflow, Theano, and Torch to understand challenges in repairs and bug repair patterns. Our key findings reveal that DNN bug fix patterns are distinctive compared to traditional bug fix patterns; the most common bug fix patterns are fixing data dimension and neural network connectivity; DNN bug fixes have the potential to introduce adversarial vulnerabilities; DNN bug fixes frequently introduce new bugs; and DNN bug localization, reuse of trained model, and coping with frequent releases are major challenges faced by developers when fixing bugs. We also contribute a benchmark of 667 DNN (bug, repair) instances.","1558-1225","978-1-4503-7121-6","","US NSF(grant numbers:CNS-15-13263,and CNS-19-34884); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284050","deep neural networks;bugs;bug fix;bug fix patterns","Computer bugs;Neural networks;Maintenance engineering;Tools;Software;Software engineering;Software development management","","11","","42","","21 Dec 2020","","","IEEE","IEEE Conferences"
"Know-How in Programming Tasks: From Textual Tutorials to Task-Oriented Knowledge Graph","J. Sun; Z. Xing; R. Chu; H. Bai; J. Wang; X. Peng","Research School of Computer Science, CECS, Australian National University, Canberra, Australia; Research School of Computer Science, CECS, Australian National University, Canberra, Australia; Research School of Computer Science, CECS, Australian National University, Canberra, Australia; Research School of Computer Science, Australian National University, Canberra, ACT, Australia; School of Information Science and Engineering, Fujian University of Technology, Fuzhou, China; School of Computer Science, Fudan University, Shanghai, China",2019 IEEE International Conference on Software Maintenance and Evolution (ICSME),"5 Dec 2019","2019","","","257","268","Accomplishing a program task usually involves performing multiple activities in a logical order. Task-solving activities may have different relationships, such as subactivityof, precede-follow, and different attributes, such as location, condition, API, code. We refer to task-solving activities and their relationships and attributes as know-how knowledge. Programming task know-how knowledge is commonly documented in semi-structured textual tutorials. A formative study of the 20 top-viewed Android-tagged how-to questions on Stack Overflow suggests that developers are faced with three information barriers (incoherent modeling of task intent, tutorial information overload and unstructured task activity description) for effectively discovering and understanding task-solving knowledge in textual tutorials. Knowledge graph has been shown to be effective in representing relational knowledge and supporting knowledge search in a structured way. Unfortunately, existing knowledge graphs extract only know-what information (e.g., APIs, API caveats and API dependencies) from software documentation. In this paper, we devise open information extraction (OpenIE) techniques to extract candidates for task activities, activity attributes and activity relationships from programming task tutorials. The resulting knowledge graph, TaskKG, includes a hierarchical taxonomy of activities, three types of activities relationships and five types of activity attributes, and enables activity-centric knowledge search. As a proof-of-concept, we apply our approach to Android Developer Guide. A comprehensive evaluation of TaskKG shows high accuracy of our OpenIE techniques. A user study shows that TaskKG is promising in helping developers finding correct answers to programming how-to questions.","2576-3148","978-1-7281-3094-1","10.1109/ICSME.2019.00039","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8919028","Knowledge Graph;Task Search;Programming Tutorials","Task analysis;Tutorials;Androids;Humanoid robots;Programming;XML;Bars","","10","","52","IEEE","5 Dec 2019","","","IEEE","IEEE Conferences"
"Learning and Programming Challenges of Rust: A Mixed-Methods Study","S. Zhu; Z. Zhang; B. Qin; A. Xiong; L. Song","Pennsylvania State University, USA; University of Wisconsin-Madison, USA; China Telecom Cloud Computing, China; Pennsylvania State University, USA; Pennsylvania State University, USA",2022 IEEE/ACM 44th International Conference on Software Engineering (ICSE),"20 Jun 2022","2022","","","1269","1281","Rust is a young systems programming language designed to provide both the safety guarantees of high-level languages and the execution performance of low-level languages. To achieve this design goal, Rust provides a suite of safety rules and checks against those rules at the compile time to eliminate many memory-safety and thread-safety issues. Due to its safety and performance, Rust's popularity has increased significantly in recent years, and it has already been adopted to build many safety-critical software systems. It is critical to understand the learning and programming challenges imposed by Rust's safety rules. For this purpose, we first conducted an empirical study through close, manual inspection of 100 Rust-related Stack Overflow questions. We sought to understand (1) what safety rules are challenging to learn and program with, (2) under which contexts a safety rule becomes more difficult to apply, and (3) whether the Rust compiler is sufficiently helpful in debugging safety-rule violations. We then performed an online survey with 101 Rust programmers to validate the findings of the empirical study. We invited participants to evaluate program variants that differ from each other, either in terms of violated safety rules or the code constructs involved in the violation, and compared the participants' performance on the variants. Our mixed-methods investigation revealed a range of consistent findings that can benefit Rust learners, practitioners, and language designers.","1558-1225","978-1-4503-9221-1","10.1145/3510003.3510164","NSF(grant numbers:CNS-1955965,CCF-2145394); IST; Pennsylvania State University; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9794066","Rust;Programming Challenges;Empirical Study;Online Survey","Context;Instruction sets;Manuals;Debugging;Programming;Inspection;Software","","9","","75","","20 Jun 2022","","","IEEE","IEEE Conferences"
"Security and Machine Learning Adoption in IoT: A Preliminary Study of IoT Developer Discussions","G. Uddin","DISA Lab, University of Calgary, Canada",2021 IEEE/ACM 3rd International Workshop on Software Engineering Research and Practices for the IoT (SERP4IoT),"24 Aug 2021","2021","","","36","43","Internet of Things (IoT) is defined as the connection between places and physical objects (i.e., things) over the internet/network via smart computing devices. IoT is a rapidly emerging paradigm that now encompasses almost every aspect of our modern life. As such, it is crucial to ensure IoT devices follow strict security requirements. At the same time, the prevalence of IoT devices offers developers a chance to design and develop Machine Learning (ML)-based intelligent software systems using their IoT devices. However, given the diversity of IoT devices, IoT developers may find it challenging to introduce appropriate security and ML techniques into their devices. Traditionally, we learn about the IoT ecosystem/problems by conducting surveys of IoT developers/practitioners. Another way to learn is by analyzing IoT developer discussions in popular online developer forums like Stack Overflow (SO). However, we are aware of no such studies that focused on IoT developers’ security and ML-related discussions in SO. This paper offers the results of preliminary study of IoT developer discussions in SO. First, we collect around 53K IoT posts (questions + accepted answers) from SO. Second, we tokenize each post into sentences. Third, we automatically identify sentences containing security and ML-related discussions. We find around 12% of sentences contain security discussions, while around 0.12% sentences contain ML-related discussions. There is no overlap between security and ML-related discussions, i.e., IoT developers discussing security requirements did not discuss ML requirements and vice versa. We find that IoT developers discussing security issues frequently inquired about how the shared data can be stored, shared, and transferred securely across IoT devices and users. We also find that IoT developers are interested to adopt deep neural network-based ML models into their IoT devices, but they find it challenging to accommodate those into their resource-constrained IoT devices. Our findings offer implications for IoT vendors and researchers to develop and design novel techniques for improved security and ML adoption into IoT devices.","","978-1-6654-4569-6","10.1109/SERP4IoT52556.2021.00013","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9516812","IoT;Security;Machine Learning;Developer Discussions","Conferences;Biological system modeling;Machine learning;Software systems;Security;Internet of Things;Software engineering","","9","","52","IEEE","24 Aug 2021","","","IEEE","IEEE Conferences"
"Faster or Slower? Performance Mystery of Python Idioms Unveiled with Empirical Evidence","Z. Zhang; Z. Xing; X. Xia; X. Xu; L. Zhu; Q. Lu","Australian National University, Australia; Australian National University, Australia; Software Engineering Application Technology Lab, Huawei, China; Data61, CSIRO, Australia; Data61, CSIRO, Australia; Data61, CSIRO, Australia",2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE),"14 Jul 2023","2023","","","1495","1507","The usage of Python idioms is popular among Python developers in a formative study of 101 Python idiom performance related questions on Stack Overflow, we find that developers often get confused about the performance impact of Python idioms and use anecdotal toy code or rely on personal project experience which is often contradictory in performance outcomes. There has been no large-scale, systematic empirical evidence to reconcile these performance debates. In the paper, we create a large synthetic dataset with 24,126 pairs of non-idiomatic and functionally-equivalent idiomatic code for the nine unique Python idioms identified in [1], and reuse a large real-project dataset of 54,879 such code pairs provided in [1]. We develop a reliable performance measurement method to compare the speedup or slowdown by idiomatic code against non-idiomatic counterpart, and analyze the performance discrepancies between the synthetic and real-project code, the relationships between code features and performance changes, and the root causes of performance changes at the bytecode level. We summarize our findings as some actionable suggestions for using Python idioms.","1558-1225","978-1-6654-5701-9","10.1109/ICSE48619.2023.00130","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10172843","","Measurement;Codes;Systematics;Toy manufacturing industry;Reliability;Python;Synthetic data","","8","","52","IEEE","14 Jul 2023","","","IEEE","IEEE Conferences"
"Code Smells for Machine Learning Applications","H. Zhang; L. Cruz; A. v. Deursen","AI for Fintech Research, ING, Amsterdam, Netherlands; Delft University of Technology, Delft, Netherlands; Delft University of Technology, Delft, Netherlands",2022 IEEE/ACM 1st International Conference on AI Engineering – Software Engineering for AI (CAIN),"17 Jun 2022","2022","","","217","228","The popularity of machine learning has wildly expanded in recent years. Machine learning techniques have been heatedly studied in academia and applied in the industry to create business value. However, there is a lack of guidelines for code quality in machine learning applications. In particular, code smells have rarely been studied in this domain. Although machine learning code is usually integrated as a small part of an overarching system, it usually plays an important role in its core functionality. Hence ensuring code quality is quintessential to avoid issues in the long run. This paper proposes and identifies a list of 22 machine learning-specific code smells collected from various sources, including papers, grey literature, GitHub commits, and Stack Overflow posts. We pinpoint each smell with a description of its context, potential issues in the long run, and proposed solutions. In addition, we link them to their respective pipeline stage and the evidence from both academic and grey literature. The code smell catalog helps data scientists and developers produce and maintain high-quality machine learning application code. ACM Reference Format: Haiyin Zhang, Luís Cruz, and Arie van Deursen. 2022. Code Smells for Machine Learning Applications. In 1st Conference on AI Engineering - Software Engineering for AI (CAIN’22), May 16-24, 2022, Pittsburgh, PA, USA. ACM, New York, NY, USA, 12 pages. https://doi.org/10.1145/3522664.3528620","","978-1-4503-9275-4","10.1145/3522664.3528620","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9796457","Code Smell;Anti-pattern;Machine Learning;Code Quality;Technical Debt","Industries;Heating systems;Codes;Pipelines;Machine learning;Software engineering;Software development management","","8","","22","","17 Jun 2022","","","IEEE","IEEE Conferences"
"Hurdles for Developers in Cryptography","M. Hazhirpasand; O. Nierstrasz; M. Shabani; M. Ghafari","University of Bern, Bern, Switzerland; University of Bern, Bern, Switzerland; Azad University, Rasht, Iran; School of Computer Science, University of Auckland, Auckland, New Zealand",2021 IEEE International Conference on Software Maintenance and Evolution (ICSME),"24 Nov 2021","2021","","","659","663","Prior research has shown that cryptography is hard to use for developers. We aim to understand what cryptography issues developers face in practice. We clustered 91 954 cryptography-related questions on the Stack Overflow website, and manually analyzed a significant sample (i.e., 383) of the questions to comprehend the crypto challenges developers commonly face in this domain. We found that either developers have a distinct lack of knowledge in understanding the fundamental concepts, e.g., OpenSSL, public-key cryptography or password hashing, or the usability of crypto libraries undermined developer performance to correctly realize a crypto scenario. This is alarming and indicates the need for dedicated research to improve the design of crypto APIs.","2576-3148","978-1-6654-2882-8","10.1109/ICSME52107.2021.00076","Swiss National Science Foundation(grant numbers:200020–181973); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9609232","Security;cryptography;developer issues","Software maintenance;Conferences;Passwords;Public key cryptography;Libraries;Complexity theory;Cryptography","","8","","20","IEEE","24 Nov 2021","","","IEEE","IEEE Conferences"
"AutoML from Software Engineering Perspective: Landscapes and Challenges","C. Wang; Z. Chen; M. Zhou","School of Computer Science, Peking University, Beijing, China; University College London, London, United Kingdom; School of Computer Science, Peking University, Beijing, China",2023 IEEE/ACM 20th International Conference on Mining Software Repositories (MSR),"12 Jul 2023","2023","","","39","51","Machine learning (ML) has been widely adopted in modern software, but the manual configuration of ML (e.g., hyper-parameter configuration) poses a significant challenge to software developers. Therefore, automated ML (AutoML), which seeks the optimal configuration of ML automatically, has received increasing attention from the software engineering community. However, to date, there is no comprehensive understanding of how AutoML is used by developers and what challenges developers encounter in using AutoML for software development. To fill this knowledge gap, we conduct the first study on understanding the use and challenges of AutoML from software developers’ perspective. We collect and analyze 1,554 AutoML downstream repositories, 769 AutoML-related Stack Overflow questions, and 1,437 relevant GitHub issues. The results suggest the increasing popularity of AutoML in a wide range of topics, but also the lack of relevant expertise. We manually identify specific challenges faced by developers for AutoML-enabled software. Based on the results, we derive a series of implications for AutoML framework selection, framework development, and research.","2574-3864","979-8-3503-1184-6","10.1109/MSR59073.2023.00019","National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10173951","AutoML;software engineering;application;challenge","Manuals;Machine learning;Market research;Software;Data mining;Software engineering;Software development management","","7","","110","IEEE","12 Jul 2023","","","IEEE","IEEE Conferences"
"Understanding Quantum Software Engineering Challenges An Empirical Study on Stack Exchange Forums and GitHub Issues","M. R. El aoun; H. Li; F. Khomh; M. Openja","Department of Computer Engineering and Software Engineering Polytechnique Montréal, Montréal, QC, Canada; Department of Computer Engineering and Software Engineering Polytechnique Montréal, Montréal, QC, Canada; Department of Computer Engineering and Software Engineering Polytechnique Montréal, Montréal, QC, Canada; Department of Computer Engineering and Software Engineering Polytechnique Montréal, Montréal, QC, Canada",2021 IEEE International Conference on Software Maintenance and Evolution (ICSME),"24 Nov 2021","2021","","","343","354","With the advance of quantum computing, quantum software becomes critical for exploring the full potential of quantum computing systems. Recently, quantum software engineering (QSE) becomes an emerging area attracting more and more attention. However, it is not clear what are the challenges and opportunities of quantum computing facing the software engineering community. This work aims to understand the QSE-related challenges perceived by developers. We perform an empirical study on Stack Exchange forums where developers post-QSE-related questions & answers and Github issue reports where developers raise QSE-related issues in practical quantum computing projects. Based on an existing taxonomy of question types on Stack Overflow, we first perform a qualitative analysis of the types of QSE-related questions asked on Stack Exchange forums. We then use automated topic modeling to uncover the topics in QSE-related Stack Exchange posts and GitHub issue reports. Our study highlights some particularly challenging areas of QSE that are different from that of traditional software engineering, such as explaining the theory behind quantum computing code, interpreting quantum program outputs, and bridging the knowledge gap between quantum computing and classical computing, as well as their associated opportunities.","2576-3148","978-1-6654-2882-8","10.1109/ICSME52107.2021.00037","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9609196","Quantum computing;Quantum software engineering;Topic modeling;Stack Exchange;Issue reports","Knowledge engineering;Software maintenance;Quantum computing;Codes;Computational modeling;Taxonomy;Quantum mechanics","","7","","84","IEEE","24 Nov 2021","","","IEEE","IEEE Conferences"
"Editing Unfit Questions in Q&A","A. W. Vargo; S. Matsubara","Department of Social Informatics, Graduate School of Informatics, Kyoto, Japan; Department of Social Informatics, Graduate School of Informatics, Kyoto, Japan",2016 5th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI),"1 Sep 2016","2016","","","107","112","Community editing is an effective tool for improving contributions in peer production communities like Wikipedia and question-answer (Q&A) communities. However, the mechanisms behind who edits and why is not well understood. Previous studies have focused on the effectiveness of editing and emergent hierarchies in editing communities. What is unknown is how editing is executed in a system that contains gamified motivations for contributing edits. In this paper, we examine participants editing unfit questions on Stack Overflow (SO), a large computer programming Q&A community. The combination of SO's community and reputation system with the dynamics of unfit questions allows us to examine how different actors behave. We find that early edits come from high-reputation users who do not participate as a questioner or answerer, indicating that these users work to retain certain questions. These results suggest that high-reputation user actions can be used to identify bad questions that have archival quality.","","978-1-4673-8985-3","10.1109/IIAI-AAI.2016.83","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7557585","Q&A;editing;community standards;gamification","Encyclopedias;Internet;Electronic publishing;Collaboration;Informatics;Production","","6","","22","IEEE","1 Sep 2016","","","IEEE","IEEE Conferences"
"An API Learning Service for Inexperienced Developers Based on API Knowledge Graph","H. Yin; Y. Zheng; Y. Sun; G. Huang","Department of Computer Science and Technology, Key Laboratory of High Confidence Software Technologies, Ministry of Education, Peking University, Beijing, China; Department of Computer Science and Technology, Key Laboratory of High Confidence Software Technologies, Ministry of Education, Peking University, Beijing, China; Department of Computer Science and Technology, Key Laboratory of High Confidence Software Technologies, Ministry of Education, Peking University, Beijing, China; Department of Computer Science and Technology, Key Laboratory of High Confidence Software Technologies, Ministry of Education, Peking University, Beijing, China",2021 IEEE International Conference on Web Services (ICWS),"11 Nov 2021","2021","","","251","261","Software development kits (SDKs) including application programming interfaces (APIs) are always required by developers who need to learn how to use the APIs. However, inexperienced developers may face two problems when learning APIs. Firstly, API-related learning resources cannot be easily obtained. Secondly, inexperienced developers often cannot find proper learning entries and paths to learn APIs, either. To solve these problems, we design an API learning service for inexperienced developers. Firstly, we propose an API link method to find learning resources about APIs in Stack Overflow (SO). Secondly, we construct an API knowledge graph which contains APIs and API-related Q&A threads from SO. Thirdly, by mining how APIs are discussed together in SO, we propose a learning entry recommendation method. At last, we propose an API learning service using the methods above to help inexperienced developers learn APIs. We conduct experiments and results demonstrate the feasibility of our methods and service.","","978-1-6654-1681-8","10.1109/ICWS53863.2021.00043","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9590431","API knowledge graph;deep learning;API learning service;API recommendation","Knowledge engineering;Web services;Conferences;Software;Faces","","6","","35","IEEE","11 Nov 2021","","","IEEE","IEEE Conferences"
